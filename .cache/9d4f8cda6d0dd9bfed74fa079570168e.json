{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532424333180},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/multicodec/package.json","includedInParent":true,"mtime":499162500000},{"name":"varint","loc":{"line":2,"column":23}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\nconst varint = require('varint')\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode\n}\n\nfunction bufferToNumber (buf) {\n  return parseInt(buf.toString('hex'), 16)\n}\n\nfunction numberToBuffer (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return Buffer.from(hexString, 'hex')\n}\n\nfunction varintBufferEncode (input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)))\n}\n\nfunction varintBufferDecode (input) {\n  return numberToBuffer(varint.decode(input))\n}\n","map":{"mappings":[{"source":"../node_modules/multicodec/src/util.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/multicodec/src/util.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}}],"sources":{"../node_modules/multicodec/src/util.js":"'use strict'\nconst varint = require('varint')\n\nmodule.exports = {\n  numberToBuffer,\n  bufferToNumber,\n  varintBufferEncode,\n  varintBufferDecode\n}\n\nfunction bufferToNumber (buf) {\n  return parseInt(buf.toString('hex'), 16)\n}\n\nfunction numberToBuffer (num) {\n  let hexString = num.toString(16)\n  if (hexString.length % 2 === 1) {\n    hexString = '0' + hexString\n  }\n  return Buffer.from(hexString, 'hex')\n}\n\nfunction varintBufferEncode (input) {\n  return Buffer.from(varint.encode(bufferToNumber(input)))\n}\n\nfunction varintBufferDecode (input) {\n  return numberToBuffer(varint.decode(input))\n}\n"},"lineCount":31}},"hash":"0bdb0cf83f6af3b2922c63257b5636ac","cacheData":{"env":{}}}