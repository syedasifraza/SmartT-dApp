{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1532311653046},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/pull-stream/package.json","includedInParent":true,"mtime":1525734385000}],"generated":{"js":"'use strict'\n\nmodule.exports = function pull (a) {\n  var length = arguments.length\n  if (typeof a === 'function' && a.length === 1) {\n    var args = new Array(length)\n    for(var i = 0; i < length; i++)\n      args[i] = arguments[i]\n    return function (read) {\n      if (args == null) {\n        throw new TypeError(\"partial sink should only be called once!\")\n      }\n\n      // Grab the reference after the check, because it's always an array now\n      // (engines like that kind of consistency).\n      var ref = args\n      args = null\n\n      // Prioritize common case of small number of pulls.\n      switch (length) {\n      case 1: return pull(read, ref[0])\n      case 2: return pull(read, ref[0], ref[1])\n      case 3: return pull(read, ref[0], ref[1], ref[2])\n      case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])\n      default:\n        ref.unshift(read)\n        return pull.apply(null, ref)\n      }\n    }\n  }\n\n  var read = a\n\n  if (read && typeof read.source === 'function') {\n    read = read.source\n  }\n\n  for (var i = 1; i < length; i++) {\n    var s = arguments[i]\n    if (typeof s === 'function') {\n      read = s(read)\n    } else if (s && typeof s === 'object') {\n      s.sink(read)\n      read = s.source\n    }\n  }\n\n  return read\n}\n","map":{"mappings":[{"source":"../node_modules/pull-stream/pull.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/pull-stream/pull.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}}],"sources":{"../node_modules/pull-stream/pull.js":"'use strict'\n\nmodule.exports = function pull (a) {\n  var length = arguments.length\n  if (typeof a === 'function' && a.length === 1) {\n    var args = new Array(length)\n    for(var i = 0; i < length; i++)\n      args[i] = arguments[i]\n    return function (read) {\n      if (args == null) {\n        throw new TypeError(\"partial sink should only be called once!\")\n      }\n\n      // Grab the reference after the check, because it's always an array now\n      // (engines like that kind of consistency).\n      var ref = args\n      args = null\n\n      // Prioritize common case of small number of pulls.\n      switch (length) {\n      case 1: return pull(read, ref[0])\n      case 2: return pull(read, ref[0], ref[1])\n      case 3: return pull(read, ref[0], ref[1], ref[2])\n      case 4: return pull(read, ref[0], ref[1], ref[2], ref[3])\n      default:\n        ref.unshift(read)\n        return pull.apply(null, ref)\n      }\n    }\n  }\n\n  var read = a\n\n  if (read && typeof read.source === 'function') {\n    read = read.source\n  }\n\n  for (var i = 1; i < length; i++) {\n    var s = arguments[i]\n    if (typeof s === 'function') {\n      read = s(read)\n    } else if (s && typeof s === 'object') {\n      s.sink(read)\n      read = s.source\n    }\n  }\n\n  return read\n}\n"},"lineCount":50}},"hash":"9bf71b3c99d376a6f61b1da8406736f8","cacheData":{"env":{}}}