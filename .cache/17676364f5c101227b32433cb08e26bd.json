{"dependencies":[{"name":"/root/nos-client-new/SmartT-dApp/package.json","includedInParent":true,"mtime":1533711856700},{"name":"/root/nos-client-new/SmartT-dApp/node_modules/node-forge/package.json","includedInParent":true,"mtime":499162500000},{"name":"./forge","loc":{"line":8,"column":20}},{"name":"./util","loc":{"line":9,"column":8}},{"name":"./jsbn","loc":{"line":10,"column":8}},{"name":"./random","loc":{"line":11,"column":8}}],"generated":{"js":"/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","map":{"mappings":[{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/node-forge/lib/prime.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}}],"sources":{"../node_modules/node-forge/lib/prime.js":"/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n"},"lineCount":298}},"hash":"bc3985f04447feda8a55f615846de5b8","cacheData":{"env":{}}}