{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532420826470},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/ipfs-api/package.json","includedInParent":true,"mtime":499162500000},{"name":"readable-stream","loc":{"line":3,"column":32}},{"name":"./ping-message-converter","loc":{"line":4,"column":37}}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TransformStream = require('readable-stream').Transform;\nvar pingMessageConverter = require('./ping-message-converter');\n\nvar PingMessageStream = function (_TransformStream) {\n  _inherits(PingMessageStream, _TransformStream);\n\n  function PingMessageStream(options) {\n    _classCallCheck(this, PingMessageStream);\n\n    var opts = Object.assign(options || {}, { objectMode: true });\n    return _possibleConstructorReturn(this, (PingMessageStream.__proto__ || Object.getPrototypeOf(PingMessageStream)).call(this, opts));\n  }\n\n  _createClass(PingMessageStream, [{\n    key: '_transform',\n    value: function _transform(obj, enc, callback) {\n      try {\n        var msg = pingMessageConverter(obj);\n        this.push(msg);\n\n        if (!msg.success) {\n          throw new Error(msg.text);\n        }\n      } catch (err) {\n        return callback(err);\n      }\n      callback();\n    }\n  }]);\n\n  return PingMessageStream;\n}(TransformStream);\n\nmodule.exports = PingMessageStream;","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":3,"column":0}},{"name":"TransformStream","generated":{"line":11,"column":4},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":3,"column":6}},{"name":"require","generated":{"line":11,"column":22},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":3,"column":24}},{"generated":{"line":11,"column":30},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":3,"column":32}},{"generated":{"line":11,"column":47},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":3,"column":24}},{"name":"Transform","generated":{"line":11,"column":49},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":3,"column":51}},{"generated":{"line":11,"column":58},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":3,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":4,"column":0}},{"name":"pingMessageConverter","generated":{"line":12,"column":4},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":4,"column":6}},{"name":"require","generated":{"line":12,"column":27},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":4,"column":29}},{"generated":{"line":12,"column":35},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":4,"column":37}},{"generated":{"line":12,"column":61},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":4,"column":29}},{"generated":{"line":12,"column":62},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":4,"column":0}},{"name":"PingMessageStream","generated":{"line":14,"column":4},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":6,"column":6}},{"generated":{"line":17,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":7,"column":2}},{"name":"options","generated":{"line":17,"column":29},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":7,"column":15}},{"generated":{"line":17,"column":36},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":7,"column":2}},{"generated":{"line":17,"column":38},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":7,"column":24}},{"generated":{"line":18,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":7,"column":24}},{"generated":{"line":20,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":4}},{"name":"opts","generated":{"line":20,"column":8},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":10}},{"name":"Object","generated":{"line":20,"column":15},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":17}},{"name":"assign","generated":{"line":20,"column":22},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":24}},{"generated":{"line":20,"column":28},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":17}},{"name":"options","generated":{"line":20,"column":29},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":31}},{"generated":{"line":20,"column":40},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":42}},{"generated":{"line":20,"column":42},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":17}},{"generated":{"line":20,"column":44},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":46}},{"name":"objectMode","generated":{"line":20,"column":46},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":48}},{"generated":{"line":20,"column":58},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":60}},{"generated":{"line":20,"column":62},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":46}},{"generated":{"line":20,"column":64},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":17}},{"generated":{"line":20,"column":65},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":8,"column":4}},{"generated":{"line":21,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":7,"column":24}},{"name":"opts","generated":{"line":21,"column":129},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":9,"column":10}},{"generated":{"line":21,"column":133},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":7,"column":24}},{"generated":{"line":22,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":10,"column":3}},{"name":"obj","generated":{"line":26,"column":31},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":12,"column":14}},{"name":"enc","generated":{"line":26,"column":36},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":12,"column":19}},{"name":"callback","generated":{"line":26,"column":41},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":12,"column":24}},{"generated":{"line":26,"column":51},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":12,"column":34}},{"generated":{"line":27,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":13,"column":4}},{"generated":{"line":27,"column":10},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":13,"column":8}},{"generated":{"line":28,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":14,"column":6}},{"name":"msg","generated":{"line":28,"column":12},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":14,"column":12}},{"name":"pingMessageConverter","generated":{"line":28,"column":18},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":14,"column":18}},{"name":"obj","generated":{"line":28,"column":39},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":14,"column":39}},{"generated":{"line":28,"column":42},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":14,"column":18}},{"generated":{"line":28,"column":43},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":14,"column":6}},{"generated":{"line":29,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":15,"column":6}},{"name":"push","generated":{"line":29,"column":13},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":15,"column":11}},{"generated":{"line":29,"column":17},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":15,"column":6}},{"name":"msg","generated":{"line":29,"column":18},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":15,"column":16}},{"generated":{"line":29,"column":21},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":15,"column":6}},{"generated":{"line":31,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":17,"column":6}},{"generated":{"line":31,"column":12},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":17,"column":10}},{"name":"msg","generated":{"line":31,"column":13},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":17,"column":11}},{"name":"success","generated":{"line":31,"column":17},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":17,"column":15}},{"generated":{"line":31,"column":24},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":17,"column":6}},{"generated":{"line":31,"column":26},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":17,"column":24}},{"generated":{"line":32,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":8}},{"generated":{"line":32,"column":16},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":14}},{"name":"Error","generated":{"line":32,"column":20},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":18}},{"generated":{"line":32,"column":25},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":14}},{"name":"msg","generated":{"line":32,"column":26},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":24}},{"name":"text","generated":{"line":32,"column":30},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":28}},{"generated":{"line":32,"column":34},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":14}},{"generated":{"line":32,"column":35},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":18,"column":8}},{"generated":{"line":33,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":19,"column":7}},{"generated":{"line":34,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":20,"column":5}},{"generated":{"line":34,"column":7},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":13,"column":4}},{"generated":{"line":34,"column":8},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":20,"column":6}},{"name":"err","generated":{"line":34,"column":15},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":20,"column":13}},{"generated":{"line":34,"column":18},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":20,"column":6}},{"generated":{"line":34,"column":20},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":20,"column":18}},{"generated":{"line":35,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":21,"column":6}},{"name":"callback","generated":{"line":35,"column":15},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":21,"column":13}},{"name":"err","generated":{"line":35,"column":24},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":21,"column":22}},{"generated":{"line":35,"column":27},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":21,"column":13}},{"generated":{"line":35,"column":28},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":21,"column":6}},{"generated":{"line":36,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":22,"column":5}},{"name":"callback","generated":{"line":37,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":23,"column":4}},{"generated":{"line":38,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":24,"column":3}},{"name":"TransformStream","generated":{"line":42,"column":2},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":6,"column":32}},{"name":"module","generated":{"line":44,"column":0},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":27,"column":0}},{"name":"exports","generated":{"line":44,"column":7},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":27,"column":7}},{"generated":{"line":44,"column":14},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":27,"column":0}},{"name":"PingMessageStream","generated":{"line":44,"column":17},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":27,"column":17}},{"generated":{"line":44,"column":34},"source":"../node_modules/ipfs-api/src/utils/ping-message-stream.js","original":{"line":27,"column":0}}],"sources":{"../node_modules/ipfs-api/src/utils/ping-message-stream.js":"'use strict'\n\nconst TransformStream = require('readable-stream').Transform\nconst pingMessageConverter = require('./ping-message-converter')\n\nclass PingMessageStream extends TransformStream {\n  constructor (options) {\n    const opts = Object.assign(options || {}, { objectMode: true })\n    super(opts)\n  }\n\n  _transform (obj, enc, callback) {\n    try {\n      const msg = pingMessageConverter(obj)\n      this.push(msg)\n\n      if (!msg.success) {\n        throw new Error(msg.text)\n      }\n    } catch (err) {\n      return callback(err)\n    }\n    callback()\n  }\n}\n\nmodule.exports = PingMessageStream\n"},"lineCount":null}},"hash":"d07098bbf26f2c30c8cfa56dfb7d97ae","cacheData":{"env":{}}}