{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1532311653046},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/js-scrypt/package.json","includedInParent":true,"mtime":1384984381000},{"name":"./argument-scrubber","loc":{"line":1,"column":26}},{"name":"child_process","loc":{"line":2,"column":19}},{"name":"generic-pool","loc":{"line":3,"column":17}},{"name":"os","loc":{"line":4,"column":24}},{"name":"buffer"}],"generated":{"js":"var __dirname = \"/root/nos-client-new/my-smartT-dapp/node_modules/js-scrypt/lib\";\nvar Buffer = require(\"buffer\").Buffer;\nvar argScrubber = require('./argument-scrubber');\r\nvar fork = require('child_process').fork;\r\nvar gp = require('generic-pool');\r\nvar cpu_count = require('os').cpus().length;\r\n\r\n//let there be up to cpu_count - 1 workers\r\nvar max_workers = cpu_count - 1;\r\nvar pool = pool = new gp.Pool({\r\n\tname: 'scrypt-worker'\r\n\t,create: function(callback) {\r\n\t\tvar worker = fork(__dirname + '/scrypt-async-worker.js');\r\n\t\tworker.controlledExit = false;\r\n\t\tworker.on('exit',function(){\r\n\t\t\tif (!worker.controlledExit) {\r\n\t\t\t\tsetImmediate(pool.destroy.bind(pool,worker));\r\n\t\t\t}\r\n\t\t});\r\n\t\tcallback(worker);\r\n\t}\r\n\t,destroy: function(worker) {\r\n\t\t//console.log('destroy-worker')\r\n\t\ttry {\r\n\t\t\t//disconnect RPC channel\r\n\t\t\tworker.controlledExit = true;\r\n\t\t\tworker.disconnect(); \r\n\t\t} catch(err) {}\r\n\t}\r\n\t,max: Math.max(2, cpu_count-1)\r\n\t,min:0\r\n\t,idleTimeoutMillis: 15000 //15 seconds\r\n\t,log:false\r\n});\r\n\r\nmodule.exports = function scryptAsync(password, salt, options, callback) {\r\n\tvar args = argScrubber.apply(null,arguments);\r\n\tvar cb = args.callback || function(){}; //local ref to callback\r\n\t\r\n\tdelete args.callback; //don't pass to child\r\n\targs.password = args.password.toString('base64');\r\n\targs.salt = args.salt.toString('base64');\r\n\r\n\tvar start = new Date();\r\n\r\n\tpool.acquire(function(err,worker){\r\n\t\t//console.log(\"got worker\");\r\n\r\n\t\tif (err) {\r\n\t\t\tpool.release(worker);\r\n\t\t\treturn cb(err);\r\n\t\t}\r\n\r\n\t\tworker.once('message', function(response) {\r\n\t\t\tvar end = new Date();\r\n\t\t\t//console.log(\"processed\", end - start);\r\n\t\t\t//console.log(\"got message from worker: \" + response);\r\n\r\n\t\t\tpool.release(worker); //done with child process\r\n\t\t\tif (response.error) cb(response.error); //return error\r\n\t\t\tcb(null, new Buffer(response.data, 'base64')); //return data\r\n\t\t});\r\n\r\n\t\tworker.send(args);\r\n\t});\r\n};","map":{"mappings":[{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/js-scrypt/lib/scrypt-async.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}}],"sources":{"../node_modules/js-scrypt/lib/scrypt-async.js":"var argScrubber = require('./argument-scrubber');\r\nvar fork = require('child_process').fork;\r\nvar gp = require('generic-pool');\r\nvar cpu_count = require('os').cpus().length;\r\n\r\n//let there be up to cpu_count - 1 workers\r\nvar max_workers = cpu_count - 1;\r\nvar pool = pool = new gp.Pool({\r\n\tname: 'scrypt-worker'\r\n\t,create: function(callback) {\r\n\t\tvar worker = fork(__dirname + '/scrypt-async-worker.js');\r\n\t\tworker.controlledExit = false;\r\n\t\tworker.on('exit',function(){\r\n\t\t\tif (!worker.controlledExit) {\r\n\t\t\t\tsetImmediate(pool.destroy.bind(pool,worker));\r\n\t\t\t}\r\n\t\t});\r\n\t\tcallback(worker);\r\n\t}\r\n\t,destroy: function(worker) {\r\n\t\t//console.log('destroy-worker')\r\n\t\ttry {\r\n\t\t\t//disconnect RPC channel\r\n\t\t\tworker.controlledExit = true;\r\n\t\t\tworker.disconnect(); \r\n\t\t} catch(err) {}\r\n\t}\r\n\t,max: Math.max(2, cpu_count-1)\r\n\t,min:0\r\n\t,idleTimeoutMillis: 15000 //15 seconds\r\n\t,log:false\r\n});\r\n\r\nmodule.exports = function scryptAsync(password, salt, options, callback) {\r\n\tvar args = argScrubber.apply(null,arguments);\r\n\tvar cb = args.callback || function(){}; //local ref to callback\r\n\t\r\n\tdelete args.callback; //don't pass to child\r\n\targs.password = args.password.toString('base64');\r\n\targs.salt = args.salt.toString('base64');\r\n\r\n\tvar start = new Date();\r\n\r\n\tpool.acquire(function(err,worker){\r\n\t\t//console.log(\"got worker\");\r\n\r\n\t\tif (err) {\r\n\t\t\tpool.release(worker);\r\n\t\t\treturn cb(err);\r\n\t\t}\r\n\r\n\t\tworker.once('message', function(response) {\r\n\t\t\tvar end = new Date();\r\n\t\t\t//console.log(\"processed\", end - start);\r\n\t\t\t//console.log(\"got message from worker: \" + response);\r\n\r\n\t\t\tpool.release(worker); //done with child process\r\n\t\t\tif (response.error) cb(response.error); //return error\r\n\t\t\tcb(null, new Buffer(response.data, 'base64')); //return data\r\n\t\t});\r\n\r\n\t\tworker.send(args);\r\n\t});\r\n};"},"lineCount":66}},"hash":"43267028aaf2d23336b08f9a547ccb78","cacheData":{"env":{}}}