{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1531123470301},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/scrypt-js/package.json","includedInParent":true,"mtime":1470095645000}],"generated":{"js":"\"use strict\";\n\n(function(root) {\n    var MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        var K = [\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ];\n\n        var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        var h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        var w = new Array(64);\n\n        function blocks(p) {\n            var off = 0, len = p.length;\n            while (len >= 64) {\n                var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        var i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi>>>24) & 0xff);\n        p.push((bitLenHi>>>16) & 0xff);\n        p.push((bitLenHi>>>8)  & 0xff);\n        p.push((bitLenHi>>>0)  & 0xff);\n        p.push((bitLenLo>>>24) & 0xff);\n        p.push((bitLenLo>>>16) & 0xff);\n        p.push((bitLenLo>>>8)  & 0xff);\n        p.push((bitLenLo>>>0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0>>>24) & 0xff, (h0>>>16) & 0xff, (h0>>>8) & 0xff, (h0>>>0) & 0xff,\n            (h1>>>24) & 0xff, (h1>>>16) & 0xff, (h1>>>8) & 0xff, (h1>>>0) & 0xff,\n            (h2>>>24) & 0xff, (h2>>>16) & 0xff, (h2>>>8) & 0xff, (h2>>>0) & 0xff,\n            (h3>>>24) & 0xff, (h3>>>16) & 0xff, (h3>>>8) & 0xff, (h3>>>0) & 0xff,\n            (h4>>>24) & 0xff, (h4>>>16) & 0xff, (h4>>>8) & 0xff, (h4>>>0) & 0xff,\n            (h5>>>24) & 0xff, (h5>>>16) & 0xff, (h5>>>8) & 0xff, (h5>>>0) & 0xff,\n            (h6>>>24) & 0xff, (h6>>>16) & 0xff, (h6>>>8) & 0xff, (h6>>>0) & 0xff,\n            (h7>>>24) & 0xff, (h7>>>16) & 0xff, (h7>>>8) & 0xff, (h7>>>0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = password.length <= 64 ? password : SHA256(password);\n\n        var i;\n        var innerLen = 64 + salt.length + 4;\n        var inner = new Array(innerLen);\n        var outerKey = new Array(64);\n        var dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) inner[i] = 0x36;\n        for (i = 0; i < password.length; i++) inner[i] ^= password[i];\n        for (i = 0; i < salt.length; i++) inner[64+i] = salt[i];\n        for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (var i = innerLen-1; i >= innerLen-4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        var i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (var i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (var i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') {\n            return false;\n        }\n        for (var i = 0; i < o.length; i++) {\n            if (typeof(o[i]) !== 'number') { return false; }\n\n            var v = parseInt(o[i]);\n            if (v != o[i] || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        var intValue = parseInt(value);\n        if (value != intValue) { throw new Error('invalid ' + name); }\n        return intValue;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        if (!callback) { throw new Error('missing callback'); }\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n\n        var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        var B = new Uint32Array(p * 32 * r)\n        for (var i = 0; i < B.length; i++) {\n            var j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        var XY = new Uint32Array(64 * r);\n        var V = new Uint32Array(32 * r * N);\n\n        var Yi = 32 * r;\n\n        // scratch space\n        var x = new Uint32Array(16);       // salsa20_8\n        var _X = new Uint32Array(16);      // blockmix_salsa8\n\n        var totalOps = p * N * 2;\n        var currentOp = 0;\n        var lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        var stop = false;\n\n        // State information\n        var state = 0;\n        var i0 = 0, i1;\n        var Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        var limit = parseInt(1000 / r);\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        var nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        var incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                // ROMix - 6\n                        var offset = (2 * r - 1) * 16;               // ROMix - 7\n                        var j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (var i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Done; don't break (which would reschedule)\n                    return callback(null, 1.0, derivedKey);\n                }\n\n                // Schedule the next steps\n                nextTick(incrementalSMix);\n            }\n\n            // Bootstrap the incremental smix\n            incrementalSMix();\n    }\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = scrypt;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(scrypt);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = scrypt;\n    }\n\n})(this);\n","map":{"mappings":[{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/scrypt-js/scrypt.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}}],"sources":{"../node_modules/scrypt-js/scrypt.js":"\"use strict\";\n\n(function(root) {\n    var MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        var K = [\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ];\n\n        var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        var h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        var w = new Array(64);\n\n        function blocks(p) {\n            var off = 0, len = p.length;\n            while (len >= 64) {\n                var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        var i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi>>>24) & 0xff);\n        p.push((bitLenHi>>>16) & 0xff);\n        p.push((bitLenHi>>>8)  & 0xff);\n        p.push((bitLenHi>>>0)  & 0xff);\n        p.push((bitLenLo>>>24) & 0xff);\n        p.push((bitLenLo>>>16) & 0xff);\n        p.push((bitLenLo>>>8)  & 0xff);\n        p.push((bitLenLo>>>0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0>>>24) & 0xff, (h0>>>16) & 0xff, (h0>>>8) & 0xff, (h0>>>0) & 0xff,\n            (h1>>>24) & 0xff, (h1>>>16) & 0xff, (h1>>>8) & 0xff, (h1>>>0) & 0xff,\n            (h2>>>24) & 0xff, (h2>>>16) & 0xff, (h2>>>8) & 0xff, (h2>>>0) & 0xff,\n            (h3>>>24) & 0xff, (h3>>>16) & 0xff, (h3>>>8) & 0xff, (h3>>>0) & 0xff,\n            (h4>>>24) & 0xff, (h4>>>16) & 0xff, (h4>>>8) & 0xff, (h4>>>0) & 0xff,\n            (h5>>>24) & 0xff, (h5>>>16) & 0xff, (h5>>>8) & 0xff, (h5>>>0) & 0xff,\n            (h6>>>24) & 0xff, (h6>>>16) & 0xff, (h6>>>8) & 0xff, (h6>>>0) & 0xff,\n            (h7>>>24) & 0xff, (h7>>>16) & 0xff, (h7>>>8) & 0xff, (h7>>>0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = password.length <= 64 ? password : SHA256(password);\n\n        var i;\n        var innerLen = 64 + salt.length + 4;\n        var inner = new Array(innerLen);\n        var outerKey = new Array(64);\n        var dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) inner[i] = 0x36;\n        for (i = 0; i < password.length; i++) inner[i] ^= password[i];\n        for (i = 0; i < salt.length; i++) inner[64+i] = salt[i];\n        for (i = innerLen - 4; i < innerLen; i++) inner[i] = 0;\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (var i = innerLen-1; i >= innerLen-4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        var i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (var i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (var i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') {\n            return false;\n        }\n        for (var i = 0; i < o.length; i++) {\n            if (typeof(o[i]) !== 'number') { return false; }\n\n            var v = parseInt(o[i]);\n            if (v != o[i] || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        var intValue = parseInt(value);\n        if (value != intValue) { throw new Error('invalid ' + name); }\n        return intValue;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        if (!callback) { throw new Error('missing callback'); }\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n\n        var b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        var B = new Uint32Array(p * 32 * r)\n        for (var i = 0; i < B.length; i++) {\n            var j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        var XY = new Uint32Array(64 * r);\n        var V = new Uint32Array(32 * r * N);\n\n        var Yi = 32 * r;\n\n        // scratch space\n        var x = new Uint32Array(16);       // salsa20_8\n        var _X = new Uint32Array(16);      // blockmix_salsa8\n\n        var totalOps = p * N * 2;\n        var currentOp = 0;\n        var lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        var stop = false;\n\n        // State information\n        var state = 0;\n        var i0 = 0, i1;\n        var Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        var limit = parseInt(1000 / r);\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        var nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        var incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    var steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (var i = 0; i < steps; i++) {                // ROMix - 6\n                        var offset = (2 * r - 1) * 16;               // ROMix - 7\n                        var j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    var percent10 = parseInt(1000 * currentOp / totalOps);\n                    if (percent10 !== lastPercent10) {\n                        stop = callback(null, currentOp / totalOps);\n                        if (stop) { break; }\n                        lastPercent10 = percent10;\n                    }\n\n                    if (i1 < N) {\n                        break;\n                    }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (var i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    var derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Done; don't break (which would reschedule)\n                    return callback(null, 1.0, derivedKey);\n                }\n\n                // Schedule the next steps\n                nextTick(incrementalSMix);\n            }\n\n            // Bootstrap the incremental smix\n            incrementalSMix();\n    }\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = scrypt;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(scrypt);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = scrypt;\n    }\n\n})(this);\n"},"lineCount":453}},"hash":"d8a2c075dd73b7a07b2558728efcb20a","cacheData":{"env":{}}}