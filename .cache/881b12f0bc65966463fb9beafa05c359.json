{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1531215806678},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/browserify-aes/package.json","includedInParent":true,"mtime":1508416184000},{"name":"buffer-xor","loc":{"line":1,"column":18}}],"generated":{"js":"var r=require(\"buffer-xor\");exports.encrypt=function(e,p){var c=r(p,e._prev);return e._prev=e._cipher.encryptBlock(c),e._prev},exports.decrypt=function(e,p){var c=e._prev;e._prev=p;var t=e._cipher.decryptBlock(p);return r(t,c)};","map":{"mappings":[{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/browserify-aes/modes/cbc.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"../node_modules/browserify-aes/modes/cbc.js":"var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n"},"lineCount":18}},"hash":"9ff959604d9232b5e23432e763a6a9f7","cacheData":{"env":{}}}