{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532424333180},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/css-vendor/package.json","includedInParent":true,"mtime":499162500000},{"name":"../prefix","loc":{"line":7,"column":22}},{"name":"../utils/pascalize","loc":{"line":11,"column":25}}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _prefix = require('../prefix');\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _pascalize = require('../utils/pascalize');\n\nvar _pascalize2 = _interopRequireDefault(_pascalize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// Support old inline-logical syntax.\n// See https://github.com/postcss/autoprefixer/issues/324.\nexports['default'] = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^(border|margin|padding)-inline/.test(prop)) return false;\n    if (_prefix2['default'].js === 'Moz') return prop;\n    var newProp = prop.replace('-inline', '');\n    return _prefix2['default'].js + (0, _pascalize2['default'])(newProp) in style ? _prefix2['default'].css + newProp : false;\n  }\n};","map":{"mappings":[{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/css-vendor/lib/plugins/inline-logical-old.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}}],"sources":{"../node_modules/css-vendor/lib/plugins/inline-logical-old.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _prefix = require('../prefix');\n\nvar _prefix2 = _interopRequireDefault(_prefix);\n\nvar _pascalize = require('../utils/pascalize');\n\nvar _pascalize2 = _interopRequireDefault(_pascalize);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// Support old inline-logical syntax.\n// See https://github.com/postcss/autoprefixer/issues/324.\nexports['default'] = {\n  supportedProperty: function supportedProperty(prop, style) {\n    if (!/^(border|margin|padding)-inline/.test(prop)) return false;\n    if (_prefix2['default'].js === 'Moz') return prop;\n    var newProp = prop.replace('-inline', '');\n    return _prefix2['default'].js + (0, _pascalize2['default'])(newProp) in style ? _prefix2['default'].css + newProp : false;\n  }\n};"},"lineCount":26}},"hash":"2fc9d468d08f848a992a1c33d137612f","cacheData":{"env":{}}}