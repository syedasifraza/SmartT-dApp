{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532420826470},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/multiaddr/package.json","includedInParent":true,"mtime":499162500000},{"name":"lodash.map","loc":{"line":3,"column":20}}],"generated":{"js":"'use strict'\n\nconst map = require('lodash.map')\n\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [17, 16, 'udp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  // all of the below use varint for size\n  [302, 0, 'utp'],\n  [421, Protocols.lengthPrefixedVarSize, 'ipfs'],\n  [480, 0, 'http'],\n  [443, 0, 'https'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [290, 0, 'p2p-circuit']\n]\n\nProtocols.names = {}\nProtocols.codes = {}\n\n// populate tables\nmap(Protocols.table, function (row) {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n})\n\nProtocols.object = p\n\nfunction p (code, size, name, resolvable) {\n  return {\n    code: code,\n    size: size,\n    name: name,\n    resolvable: Boolean(resolvable)\n  }\n}\n\nmodule.exports = Protocols\n","map":{"mappings":[{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/multiaddr/src/protocols-table.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"../node_modules/multiaddr/src/protocols-table.js":"'use strict'\n\nconst map = require('lodash.map')\n\nfunction Protocols (proto) {\n  if (typeof (proto) === 'number') {\n    if (Protocols.codes[proto]) {\n      return Protocols.codes[proto]\n    }\n\n    throw new Error('no protocol with code: ' + proto)\n  } else if (typeof (proto) === 'string' || proto instanceof String) {\n    if (Protocols.names[proto]) {\n      return Protocols.names[proto]\n    }\n\n    throw new Error('no protocol with name: ' + proto)\n  }\n\n  throw new Error('invalid protocol id type: ' + proto)\n}\n\nconst V = -1\nProtocols.lengthPrefixedVarSize = V\nProtocols.V = V\n\nProtocols.table = [\n  [4, 32, 'ip4'],\n  [6, 16, 'tcp'],\n  [17, 16, 'udp'],\n  [33, 16, 'dccp'],\n  [41, 128, 'ip6'],\n  [54, V, 'dns4', 'resolvable'],\n  [55, V, 'dns6', 'resolvable'],\n  [56, V, 'dnsaddr', 'resolvable'],\n  [132, 16, 'sctp'],\n  // all of the below use varint for size\n  [302, 0, 'utp'],\n  [421, Protocols.lengthPrefixedVarSize, 'ipfs'],\n  [480, 0, 'http'],\n  [443, 0, 'https'],\n  [477, 0, 'ws'],\n  [478, 0, 'wss'],\n  [479, 0, 'p2p-websocket-star'],\n  [275, 0, 'p2p-webrtc-star'],\n  [276, 0, 'p2p-webrtc-direct'],\n  [290, 0, 'p2p-circuit']\n]\n\nProtocols.names = {}\nProtocols.codes = {}\n\n// populate tables\nmap(Protocols.table, function (row) {\n  const proto = p.apply(null, row)\n  Protocols.codes[proto.code] = proto\n  Protocols.names[proto.name] = proto\n})\n\nProtocols.object = p\n\nfunction p (code, size, name, resolvable) {\n  return {\n    code: code,\n    size: size,\n    name: name,\n    resolvable: Boolean(resolvable)\n  }\n}\n\nmodule.exports = Protocols\n"},"lineCount":72}},"hash":"967d3fb1ca3b1da9cd88b3a736e2af2f","cacheData":{"env":{}}}