{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532424333180},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/multicodec/package.json","includedInParent":true,"mtime":499162500000},{"name":"varint","loc":{"line":14,"column":23}},{"name":"./varint-table","loc":{"line":15,"column":38}},{"name":"./name-table","loc":{"line":16,"column":32}},{"name":"./util","loc":{"line":17,"column":21}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\nconst varint = require('varint')\nconst codecNameToCodeVarint = require('./varint-table')\nconst codeToCodecName = require('./name-table')\nconst util = require('./util')\n\nexports = module.exports\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {string|number} multicodecStrOrCode\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.addPrefix = (multicodecStrOrCode, data) => {\n  let prefix\n\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\n  } else {\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n  return Buffer.concat([prefix, data])\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.rmPrefix = (data) => {\n  varint.decode(data)\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {string}\n */\nexports.getCodec = (prefixedData) => {\n  const code = util.varintBufferDecode(prefixedData)\n  const codecName = codeToCodecName[code.toString('hex')]\n  if (codecName === undefined) {\n    throw new Error('Code `0x' + code.toString('hex') + '` not found')\n  }\n  return codecName\n}\n\n/**\n * Get the code as varint of a codec name.\n * @param {string} codecName\n * @returns {Buffer}\n */\nexports.getCodeVarint = (codecName) => {\n  const code = codecNameToCodeVarint[codecName]\n  if (code === undefined) {\n    throw new Error('Codec `' + codecName + '` not found')\n  }\n  return code\n}\n\n/**\n * Add a new codec\n * @param {string} name Name of the codec\n * @param {Buffer} code The code of the codec\n * @returns {void}\n */\nexports.addCodec = (name, code) => {\n  codecNameToCodeVarint[name] = util.varintBufferEncode(code)\n  codeToCodecName[code.toString('hex')] = name\n}\n","map":{"mappings":[{"source":"../node_modules/multicodec/src/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/multicodec/src/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}}],"sources":{"../node_modules/multicodec/src/index.js":"/**\n * Implementation of the multicodec specification.\n *\n * @module multicodec\n * @example\n * const multicodec = require('multicodec')\n *\n * const prefixedProtobuf = multicodec.addPrefix('protobuf', protobufBuffer)\n * // prefixedProtobuf 0x50...\n *\n */\n'use strict'\n\nconst varint = require('varint')\nconst codecNameToCodeVarint = require('./varint-table')\nconst codeToCodecName = require('./name-table')\nconst util = require('./util')\n\nexports = module.exports\n\n/**\n * Prefix a buffer with a multicodec-packed.\n *\n * @param {string|number} multicodecStrOrCode\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.addPrefix = (multicodecStrOrCode, data) => {\n  let prefix\n\n  if (Buffer.isBuffer(multicodecStrOrCode)) {\n    prefix = util.varintBufferEncode(multicodecStrOrCode)\n  } else {\n    if (codecNameToCodeVarint[multicodecStrOrCode]) {\n      prefix = codecNameToCodeVarint[multicodecStrOrCode]\n    } else {\n      throw new Error('multicodec not recognized')\n    }\n  }\n  return Buffer.concat([prefix, data])\n}\n\n/**\n * Decapsulate the multicodec-packed prefix from the data.\n *\n * @param {Buffer} data\n * @returns {Buffer}\n */\nexports.rmPrefix = (data) => {\n  varint.decode(data)\n  return data.slice(varint.decode.bytes)\n}\n\n/**\n * Get the codec of the prefixed data.\n * @param {Buffer} prefixedData\n * @returns {string}\n */\nexports.getCodec = (prefixedData) => {\n  const code = util.varintBufferDecode(prefixedData)\n  const codecName = codeToCodecName[code.toString('hex')]\n  if (codecName === undefined) {\n    throw new Error('Code `0x' + code.toString('hex') + '` not found')\n  }\n  return codecName\n}\n\n/**\n * Get the code as varint of a codec name.\n * @param {string} codecName\n * @returns {Buffer}\n */\nexports.getCodeVarint = (codecName) => {\n  const code = codecNameToCodeVarint[codecName]\n  if (code === undefined) {\n    throw new Error('Codec `' + codecName + '` not found')\n  }\n  return code\n}\n\n/**\n * Add a new codec\n * @param {string} name Name of the codec\n * @param {Buffer} code The code of the codec\n * @returns {void}\n */\nexports.addCodec = (name, code) => {\n  codecNameToCodeVarint[name] = util.varintBufferEncode(code)\n  codeToCodecName[code.toString('hex')] = name\n}\n"},"lineCount":92}},"hash":"0ca231cabe7d4a4cb5b2afa32f1c7801","cacheData":{"env":{}}}