{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532424333180},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/ipfs-api/package.json","includedInParent":true,"mtime":499162500000},{"name":"readable-stream","loc":{"line":3,"column":32}}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TransformStream = require('readable-stream').Transform;\n\n/*\n  Transforms a stream of {Name, Hash} objects to include size\n  of the DAG object.\n\n  Usage: inputStream.pipe(new FileResultStreamConverter())\n\n  Input object format:\n  {\n    Name: '/path/to/file/foo.txt',\n    Hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP'\n    Size: '20'\n  }\n\n  Output object format:\n  {\n    path: '/path/to/file/foo.txt',\n    hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP',\n    size: 20\n  }\n*/\n\nvar FileResultStreamConverter = function (_TransformStream) {\n  _inherits(FileResultStreamConverter, _TransformStream);\n\n  function FileResultStreamConverter(options) {\n    _classCallCheck(this, FileResultStreamConverter);\n\n    var opts = Object.assign({}, options || {}, { objectMode: true });\n    return _possibleConstructorReturn(this, (FileResultStreamConverter.__proto__ || Object.getPrototypeOf(FileResultStreamConverter)).call(this, opts));\n  }\n\n  _createClass(FileResultStreamConverter, [{\n    key: '_transform',\n    value: function _transform(obj, enc, callback) {\n      if (!obj.Hash) {\n        return callback();\n      }\n\n      callback(null, {\n        path: obj.Name,\n        hash: obj.Hash,\n        size: parseInt(obj.Size, 10)\n      });\n    }\n  }]);\n\n  return FileResultStreamConverter;\n}(TransformStream);\n\nmodule.exports = FileResultStreamConverter;","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":3,"column":0}},{"name":"TransformStream","generated":{"line":11,"column":4},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":3,"column":6}},{"name":"require","generated":{"line":11,"column":22},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":3,"column":24}},{"generated":{"line":11,"column":30},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":3,"column":32}},{"generated":{"line":11,"column":47},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":3,"column":24}},{"name":"Transform","generated":{"line":11,"column":49},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":3,"column":51}},{"generated":{"line":11,"column":58},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":5,"column":0}},{"name":"FileResultStreamConverter","generated":{"line":34,"column":4},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":25,"column":6}},{"generated":{"line":37,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":26,"column":2}},{"name":"options","generated":{"line":37,"column":37},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":26,"column":15}},{"generated":{"line":37,"column":44},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":26,"column":2}},{"generated":{"line":37,"column":46},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":26,"column":24}},{"generated":{"line":38,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":26,"column":24}},{"generated":{"line":40,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":4}},{"name":"opts","generated":{"line":40,"column":8},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":10}},{"name":"Object","generated":{"line":40,"column":15},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":17}},{"name":"assign","generated":{"line":40,"column":22},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":24}},{"generated":{"line":40,"column":28},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":17}},{"generated":{"line":40,"column":29},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":31}},{"generated":{"line":40,"column":31},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":17}},{"name":"options","generated":{"line":40,"column":33},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":35}},{"generated":{"line":40,"column":44},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":46}},{"generated":{"line":40,"column":46},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":17}},{"generated":{"line":40,"column":48},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":50}},{"name":"objectMode","generated":{"line":40,"column":50},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":52}},{"generated":{"line":40,"column":62},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":64}},{"generated":{"line":40,"column":66},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":50}},{"generated":{"line":40,"column":68},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":17}},{"generated":{"line":40,"column":69},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":27,"column":4}},{"generated":{"line":41,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":26,"column":24}},{"name":"opts","generated":{"line":41,"column":145},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":28,"column":10}},{"generated":{"line":41,"column":149},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":26,"column":24}},{"generated":{"line":42,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":29,"column":3}},{"name":"obj","generated":{"line":46,"column":31},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":31,"column":14}},{"name":"enc","generated":{"line":46,"column":36},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":31,"column":19}},{"name":"callback","generated":{"line":46,"column":41},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":31,"column":24}},{"generated":{"line":46,"column":51},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":31,"column":34}},{"generated":{"line":47,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":32,"column":4}},{"generated":{"line":47,"column":10},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":32,"column":8}},{"name":"obj","generated":{"line":47,"column":11},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":32,"column":9}},{"name":"Hash","generated":{"line":47,"column":15},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":32,"column":13}},{"generated":{"line":47,"column":19},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":32,"column":4}},{"generated":{"line":47,"column":21},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":32,"column":19}},{"generated":{"line":48,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":33,"column":6}},{"name":"callback","generated":{"line":48,"column":15},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":33,"column":13}},{"generated":{"line":48,"column":25},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":33,"column":6}},{"generated":{"line":49,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":34,"column":5}},{"name":"callback","generated":{"line":51,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":4}},{"generated":{"line":51,"column":15},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":13}},{"generated":{"line":51,"column":19},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":4}},{"generated":{"line":51,"column":21},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":19}},{"name":"path","generated":{"line":52,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":37,"column":6}},{"name":"obj","generated":{"line":52,"column":14},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":37,"column":12}},{"name":"Name","generated":{"line":52,"column":18},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":37,"column":16}},{"generated":{"line":52,"column":22},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":19}},{"name":"hash","generated":{"line":53,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":38,"column":6}},{"name":"obj","generated":{"line":53,"column":14},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":38,"column":12}},{"name":"Hash","generated":{"line":53,"column":18},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":38,"column":16}},{"generated":{"line":53,"column":22},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":19}},{"name":"size","generated":{"line":54,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":39,"column":6}},{"name":"parseInt","generated":{"line":54,"column":14},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":39,"column":12}},{"name":"obj","generated":{"line":54,"column":23},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":39,"column":21}},{"name":"Size","generated":{"line":54,"column":27},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":39,"column":25}},{"generated":{"line":54,"column":31},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":39,"column":12}},{"generated":{"line":54,"column":33},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":39,"column":31}},{"generated":{"line":54,"column":35},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":39,"column":12}},{"generated":{"line":55,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":19}},{"generated":{"line":55,"column":7},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":36,"column":4}},{"generated":{"line":56,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":41,"column":3}},{"name":"TransformStream","generated":{"line":60,"column":2},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":25,"column":40}},{"name":"module","generated":{"line":62,"column":0},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":44,"column":0}},{"name":"exports","generated":{"line":62,"column":7},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":44,"column":7}},{"generated":{"line":62,"column":14},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":44,"column":0}},{"name":"FileResultStreamConverter","generated":{"line":62,"column":17},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":44,"column":17}},{"generated":{"line":62,"column":42},"source":"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js","original":{"line":44,"column":0}}],"sources":{"../node_modules/ipfs-api/src/utils/file-result-stream-converter.js":"'use strict'\n\nconst TransformStream = require('readable-stream').Transform\n\n/*\n  Transforms a stream of {Name, Hash} objects to include size\n  of the DAG object.\n\n  Usage: inputStream.pipe(new FileResultStreamConverter())\n\n  Input object format:\n  {\n    Name: '/path/to/file/foo.txt',\n    Hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP'\n    Size: '20'\n  }\n\n  Output object format:\n  {\n    path: '/path/to/file/foo.txt',\n    hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP',\n    size: 20\n  }\n*/\nclass FileResultStreamConverter extends TransformStream {\n  constructor (options) {\n    const opts = Object.assign({}, options || {}, { objectMode: true })\n    super(opts)\n  }\n\n  _transform (obj, enc, callback) {\n    if (!obj.Hash) {\n      return callback()\n    }\n\n    callback(null, {\n      path: obj.Name,\n      hash: obj.Hash,\n      size: parseInt(obj.Size, 10)\n    })\n  }\n}\n\nmodule.exports = FileResultStreamConverter\n"},"lineCount":null}},"hash":"9a039b89e2b9d446e8fca05f0c1a042d","cacheData":{"env":{}}}