{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1530853003129},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/bs58check/package.json","includedInParent":true,"mtime":1512473080000},{"name":"bs58","loc":{"line":3,"column":21}},{"name":"safe-buffer","loc":{"line":4,"column":21}}],"generated":{"js":"\n'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","map":{"mappings":[{"source":"../node_modules/bs58check/base.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/bs58check/base.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}}],"sources":{"../node_modules/bs58check/base.js":"'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n"},"lineCount":52}},"hash":"ca21ad829eecfe116891413fe91231b8","cacheData":{"env":{}}}