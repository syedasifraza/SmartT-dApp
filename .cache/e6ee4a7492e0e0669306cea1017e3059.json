{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532420826470},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/buffer-alloc/package.json","includedInParent":true,"mtime":1527637254000},{"name":"buffer-fill","loc":{"line":1,"column":25}},{"name":"buffer-alloc-unsafe","loc":{"line":2,"column":26}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar e=require(\"buffer\").Buffer,r=require(\"buffer-fill\"),u=require(\"buffer-alloc-unsafe\");module.exports=function(f,n,o){if(\"number\"!=typeof f)throw new TypeError('\"size\" argument must be a number');if(f<0)throw new RangeError('\"size\" argument must not be negative');if(e.alloc)return e.alloc(f,n,o);var t=u(f);return 0===f?t:void 0===n?r(t,0):(\"string\"!=typeof o&&(o=void 0),r(t,n,o))};","map":{"mappings":[{"source":"../node_modules/buffer-alloc/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/buffer-alloc/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}}],"sources":{"../node_modules/buffer-alloc/index.js":"var bufferFill = require('buffer-fill')\nvar allocUnsafe = require('buffer-alloc-unsafe')\n\nmodule.exports = function alloc (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  }\n\n  if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n\n  if (Buffer.alloc) {\n    return Buffer.alloc(size, fill, encoding)\n  }\n\n  var buffer = allocUnsafe(size)\n\n  if (size === 0) {\n    return buffer\n  }\n\n  if (fill === undefined) {\n    return bufferFill(buffer, 0)\n  }\n\n  if (typeof encoding !== 'string') {\n    encoding = undefined\n  }\n\n  return bufferFill(buffer, fill, encoding)\n}\n"},"lineCount":35}},"hash":"9689db3bac67e45c3d2bb7bd00407f4f","cacheData":{"env":{}}}