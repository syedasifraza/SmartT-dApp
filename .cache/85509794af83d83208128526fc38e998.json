{"dependencies":[{"name":"/root/nos-client-new/SmartT-dApp/package.json","includedInParent":true,"mtime":1533711856700},{"name":"/root/nos-client-new/SmartT-dApp/node_modules/public-encrypt/package.json","includedInParent":true,"mtime":499162500000},{"name":"bn.js","loc":{"line":1,"column":17}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar bn = require('bn.js');\nfunction withPublic(paddedMsg, key) {\n  return new Buffer(paddedMsg\n    .toRed(bn.mont(key.modulus))\n    .redPow(new bn(key.publicExponent))\n    .fromRed()\n    .toArray());\n}\n\nmodule.exports = withPublic;","map":{"mappings":[{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/public-encrypt/withPublic.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}}],"sources":{"../node_modules/public-encrypt/withPublic.js":"var bn = require('bn.js');\nfunction withPublic(paddedMsg, key) {\n  return new Buffer(paddedMsg\n    .toRed(bn.mont(key.modulus))\n    .redPow(new bn(key.publicExponent))\n    .fromRed()\n    .toArray());\n}\n\nmodule.exports = withPublic;"},"lineCount":11}},"hash":"b7689e62a98cf7d6f2c1bee16ddc6bdf","cacheData":{"env":{}}}