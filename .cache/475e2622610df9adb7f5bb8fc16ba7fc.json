{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1531215806678},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/hash-base/package.json","includedInParent":true,"mtime":1460889492000},{"name":"stream","loc":{"line":2,"column":24}},{"name":"inherits","loc":{"line":3,"column":23}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar t=require(\"buffer\").Buffer,e=require(\"stream\").Transform,i=require(\"inherits\");function r(i){e.call(this),this._block=new t(i),this._blockSize=i,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}i(r,e),r.prototype._transform=function(e,i,r){var o=null;try{\"buffer\"!==i&&(e=new t(e,i)),this.update(e)}catch(t){o=t}r(o)},r.prototype._flush=function(t){var e=null;try{this.push(this._digest())}catch(t){e=t}t(e)},r.prototype.update=function(e,i){if(!t.isBuffer(e)&&\"string\"!=typeof e)throw new TypeError(\"Data must be a string or a buffer\");if(this._finalized)throw new Error(\"Digest already called\");t.isBuffer(e)||(e=new t(e,i||\"binary\"));for(var r=this._block,o=0;this._blockOffset+e.length-o>=this._blockSize;){for(var s=this._blockOffset;s<this._blockSize;)r[s++]=e[o++];this._update(),this._blockOffset=0}for(;o<e.length;)r[this._blockOffset++]=e[o++];for(var n=0,f=8*e.length;f>0;++n)this._length[n]+=f,(f=this._length[n]/4294967296|0)>0&&(this._length[n]-=4294967296*f);return this},r.prototype._update=function(t){throw new Error(\"_update is not implemented\")},r.prototype.digest=function(t){if(this._finalized)throw new Error(\"Digest already called\");this._finalized=!0;var e=this._digest();return void 0!==t&&(e=e.toString(t)),e},r.prototype._digest=function(){throw new Error(\"_digest is not implemented\")},module.exports=r;","map":{"mappings":[{"source":"../node_modules/hash-base/index.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/hash-base/index.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../node_modules/hash-base/index.js":"'use strict'\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = new Buffer(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    if (encoding !== 'buffer') chunk = new Buffer(chunk, encoding)\n    this.update(chunk)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this._digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = new Buffer(data, encoding || 'binary')\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function (data) {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n"},"lineCount":86}},"hash":"5942937e93dd7565644c6ea7741141ff","cacheData":{"env":{}}}