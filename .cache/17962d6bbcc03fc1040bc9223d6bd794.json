{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1532311653046},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/node-forge/package.json","includedInParent":true,"mtime":1520452706000},{"name":"./forge","loc":{"line":10,"column":20}},{"name":"./hmac","loc":{"line":11,"column":8}},{"name":"./md","loc":{"line":12,"column":8}},{"name":"./util","loc":{"line":13,"column":8}},{"name":"crypto","loc":{"line":19,"column":19}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = new Buffer(p, 'binary');\n    s = new Buffer(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","map":{"mappings":[{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/node-forge/lib/pbkdf2.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}}],"sources":{"../node_modules/node-forge/lib/pbkdf2.js":"/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = new Buffer(p, 'binary');\n    s = new Buffer(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n"},"lineCount":213}},"hash":"b72a0f27a4991a593abebf39db6e05c5","cacheData":{"env":{}}}