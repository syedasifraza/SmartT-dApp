{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1532311653046},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/libp2p-crypto/node_modules/node-forge/package.json","includedInParent":true,"mtime":499162500000},{"name":"./forge","loc":{"line":11,"column":20}},{"name":"./aes","loc":{"line":12,"column":8}},{"name":"./hmac","loc":{"line":13,"column":8}},{"name":"./md5","loc":{"line":14,"column":8}},{"name":"./sha1","loc":{"line":15,"column":8}},{"name":"./util","loc":{"line":16,"column":8}}],"generated":{"js":"/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./hmac');\nrequire('./md5');\nrequire('./sha1');\nrequire('./util');\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n","map":{"mappings":[{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}}],"sources":{"../node_modules/libp2p-crypto/node_modules/node-forge/lib/ssh.js":"/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./hmac');\nrequire('./md5');\nrequire('./sha1');\nrequire('./util');\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n"},"lineCount":237}},"hash":"3b2a971949cdeae358aae657d119faae","cacheData":{"env":{}}}