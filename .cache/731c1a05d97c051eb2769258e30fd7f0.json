{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1532311653046},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/ipfs-api/package.json","includedInParent":true,"mtime":499162500000},{"name":"../utils/module-config","loc":{"line":3,"column":29}},{"name":"./get","loc":{"line":9,"column":17}},{"name":"./put","loc":{"line":10,"column":17}},{"name":"./findprovs","loc":{"line":11,"column":23}},{"name":"./findpeer","loc":{"line":12,"column":22}},{"name":"./provide","loc":{"line":13,"column":21}},{"name":"./query","loc":{"line":15,"column":19}}],"generated":{"js":"'use strict';\n\nvar moduleConfig = require('../utils/module-config');\n\nmodule.exports = function (arg) {\n  var send = moduleConfig(arg);\n\n  return {\n    get: require('./get')(send),\n    put: require('./put')(send),\n    findprovs: require('./findprovs')(send),\n    findpeer: require('./findpeer')(send),\n    provide: require('./provide')(send),\n    // find closest peerId to given peerId\n    query: require('./query')(send)\n  };\n};","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":3,"column":0}},{"name":"moduleConfig","generated":{"line":3,"column":4},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":3,"column":6}},{"name":"require","generated":{"line":3,"column":19},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":3,"column":21}},{"generated":{"line":3,"column":27},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":3,"column":29}},{"generated":{"line":3,"column":51},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":3,"column":21}},{"generated":{"line":3,"column":52},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":3,"column":0}},{"name":"module","generated":{"line":5,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":0}},{"name":"exports","generated":{"line":5,"column":7},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":7}},{"generated":{"line":5,"column":14},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":17},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":17}},{"name":"arg","generated":{"line":5,"column":27},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":18}},{"generated":{"line":5,"column":30},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":17}},{"generated":{"line":5,"column":32},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":26}},{"generated":{"line":6,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":6,"column":2}},{"name":"send","generated":{"line":6,"column":6},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":6,"column":8}},{"name":"moduleConfig","generated":{"line":6,"column":13},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":6,"column":15}},{"name":"arg","generated":{"line":6,"column":26},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":6,"column":28}},{"generated":{"line":6,"column":29},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":6,"column":15}},{"generated":{"line":6,"column":30},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":6,"column":2}},{"generated":{"line":8,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":2}},{"generated":{"line":8,"column":9},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":9}},{"name":"get","generated":{"line":9,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":9,"column":4}},{"name":"require","generated":{"line":9,"column":9},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":9,"column":9}},{"generated":{"line":9,"column":17},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":9,"column":17}},{"generated":{"line":9,"column":24},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":9,"column":9}},{"name":"send","generated":{"line":9,"column":26},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":9,"column":26}},{"generated":{"line":9,"column":30},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":9,"column":9}},{"generated":{"line":9,"column":31},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":9}},{"name":"put","generated":{"line":10,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":10,"column":4}},{"name":"require","generated":{"line":10,"column":9},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":10,"column":9}},{"generated":{"line":10,"column":17},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":10,"column":17}},{"generated":{"line":10,"column":24},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":10,"column":9}},{"name":"send","generated":{"line":10,"column":26},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":10,"column":26}},{"generated":{"line":10,"column":30},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":10,"column":9}},{"generated":{"line":10,"column":31},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":9}},{"name":"findprovs","generated":{"line":11,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":11,"column":4}},{"name":"require","generated":{"line":11,"column":15},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":11,"column":15}},{"generated":{"line":11,"column":23},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":11,"column":23}},{"generated":{"line":11,"column":36},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":11,"column":15}},{"name":"send","generated":{"line":11,"column":38},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":11,"column":38}},{"generated":{"line":11,"column":42},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":11,"column":15}},{"generated":{"line":11,"column":43},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":9}},{"name":"findpeer","generated":{"line":12,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":12,"column":4}},{"name":"require","generated":{"line":12,"column":14},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":12,"column":14}},{"generated":{"line":12,"column":22},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":12,"column":22}},{"generated":{"line":12,"column":34},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":12,"column":14}},{"name":"send","generated":{"line":12,"column":36},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":12,"column":36}},{"generated":{"line":12,"column":40},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":12,"column":14}},{"generated":{"line":12,"column":41},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":9}},{"name":"provide","generated":{"line":13,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":13,"column":4}},{"name":"require","generated":{"line":13,"column":13},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":21},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":13,"column":21}},{"generated":{"line":13,"column":32},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":13,"column":13}},{"name":"send","generated":{"line":13,"column":34},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":13,"column":34}},{"generated":{"line":13,"column":38},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":13,"column":13}},{"generated":{"line":13,"column":39},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":9}},{"generated":{"line":14,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":14,"column":4}},{"name":"query","generated":{"line":15,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":15,"column":4}},{"name":"require","generated":{"line":15,"column":11},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":15,"column":11}},{"generated":{"line":15,"column":19},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":15,"column":19}},{"generated":{"line":15,"column":28},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":15,"column":11}},{"name":"send","generated":{"line":15,"column":30},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":15,"column":30}},{"generated":{"line":15,"column":34},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":15,"column":11}},{"generated":{"line":16,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":9}},{"generated":{"line":16,"column":3},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":8,"column":2}},{"generated":{"line":17,"column":0},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":17,"column":1}},{"generated":{"line":17,"column":1},"source":"../node_modules/ipfs-api/src/dht/index.js","original":{"line":5,"column":0}}],"sources":{"../node_modules/ipfs-api/src/dht/index.js":"'use strict'\n\nconst moduleConfig = require('../utils/module-config')\n\nmodule.exports = (arg) => {\n  const send = moduleConfig(arg)\n\n  return {\n    get: require('./get')(send),\n    put: require('./put')(send),\n    findprovs: require('./findprovs')(send),\n    findpeer: require('./findpeer')(send),\n    provide: require('./provide')(send),\n    // find closest peerId to given peerId\n    query: require('./query')(send)\n  }\n}\n"},"lineCount":null}},"hash":"bdd06f8af7992b6223ba69477a37dd25","cacheData":{"env":{}}}