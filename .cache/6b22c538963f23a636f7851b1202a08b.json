{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1532311653046},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/libp2p-crypto/node_modules/node-forge/package.json","includedInParent":true,"mtime":499162500000},{"name":"./forge","loc":{"line":96,"column":20}},{"name":"./asn1","loc":{"line":97,"column":8}},{"name":"./hmac","loc":{"line":98,"column":8}},{"name":"./oids","loc":{"line":99,"column":8}},{"name":"./pkcs7asn1","loc":{"line":100,"column":8}},{"name":"./pbe","loc":{"line":101,"column":8}},{"name":"./random","loc":{"line":102,"column":8}},{"name":"./rsa","loc":{"line":103,"column":8}},{"name":"./sha1","loc":{"line":104,"column":8}},{"name":"./util","loc":{"line":105,"column":8}},{"name":"./x509","loc":{"line":106,"column":8}}],"generated":{"js":"/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type ’Attribute’\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n","map":{"mappings":[{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":734,"column":0},"generated":{"line":734,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":735,"column":0},"generated":{"line":735,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":736,"column":0},"generated":{"line":736,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":737,"column":0},"generated":{"line":737,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":738,"column":0},"generated":{"line":738,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":739,"column":0},"generated":{"line":739,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":740,"column":0},"generated":{"line":740,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":741,"column":0},"generated":{"line":741,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":742,"column":0},"generated":{"line":742,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":743,"column":0},"generated":{"line":743,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":744,"column":0},"generated":{"line":744,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":745,"column":0},"generated":{"line":745,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":746,"column":0},"generated":{"line":746,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":747,"column":0},"generated":{"line":747,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":748,"column":0},"generated":{"line":748,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":749,"column":0},"generated":{"line":749,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":750,"column":0},"generated":{"line":750,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":751,"column":0},"generated":{"line":751,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":752,"column":0},"generated":{"line":752,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":753,"column":0},"generated":{"line":753,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":754,"column":0},"generated":{"line":754,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":755,"column":0},"generated":{"line":755,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":756,"column":0},"generated":{"line":756,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":757,"column":0},"generated":{"line":757,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":758,"column":0},"generated":{"line":758,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":759,"column":0},"generated":{"line":759,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":760,"column":0},"generated":{"line":760,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":761,"column":0},"generated":{"line":761,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":762,"column":0},"generated":{"line":762,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":763,"column":0},"generated":{"line":763,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":764,"column":0},"generated":{"line":764,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":765,"column":0},"generated":{"line":765,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":766,"column":0},"generated":{"line":766,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":767,"column":0},"generated":{"line":767,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":768,"column":0},"generated":{"line":768,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":769,"column":0},"generated":{"line":769,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":770,"column":0},"generated":{"line":770,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":771,"column":0},"generated":{"line":771,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":772,"column":0},"generated":{"line":772,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":773,"column":0},"generated":{"line":773,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":774,"column":0},"generated":{"line":774,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":775,"column":0},"generated":{"line":775,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":776,"column":0},"generated":{"line":776,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":777,"column":0},"generated":{"line":777,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":778,"column":0},"generated":{"line":778,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":779,"column":0},"generated":{"line":779,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":780,"column":0},"generated":{"line":780,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":781,"column":0},"generated":{"line":781,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":782,"column":0},"generated":{"line":782,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":783,"column":0},"generated":{"line":783,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":784,"column":0},"generated":{"line":784,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":785,"column":0},"generated":{"line":785,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":786,"column":0},"generated":{"line":786,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":787,"column":0},"generated":{"line":787,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":788,"column":0},"generated":{"line":788,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":789,"column":0},"generated":{"line":789,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":790,"column":0},"generated":{"line":790,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":791,"column":0},"generated":{"line":791,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":792,"column":0},"generated":{"line":792,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":793,"column":0},"generated":{"line":793,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":794,"column":0},"generated":{"line":794,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":795,"column":0},"generated":{"line":795,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":796,"column":0},"generated":{"line":796,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":797,"column":0},"generated":{"line":797,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":798,"column":0},"generated":{"line":798,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":799,"column":0},"generated":{"line":799,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":800,"column":0},"generated":{"line":800,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":801,"column":0},"generated":{"line":801,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":802,"column":0},"generated":{"line":802,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":803,"column":0},"generated":{"line":803,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":804,"column":0},"generated":{"line":804,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":805,"column":0},"generated":{"line":805,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":806,"column":0},"generated":{"line":806,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":807,"column":0},"generated":{"line":807,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":808,"column":0},"generated":{"line":808,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":809,"column":0},"generated":{"line":809,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":810,"column":0},"generated":{"line":810,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":811,"column":0},"generated":{"line":811,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":812,"column":0},"generated":{"line":812,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":813,"column":0},"generated":{"line":813,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":814,"column":0},"generated":{"line":814,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":815,"column":0},"generated":{"line":815,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":816,"column":0},"generated":{"line":816,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":817,"column":0},"generated":{"line":817,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":818,"column":0},"generated":{"line":818,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":819,"column":0},"generated":{"line":819,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":820,"column":0},"generated":{"line":820,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":821,"column":0},"generated":{"line":821,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":822,"column":0},"generated":{"line":822,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":823,"column":0},"generated":{"line":823,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":824,"column":0},"generated":{"line":824,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":825,"column":0},"generated":{"line":825,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":826,"column":0},"generated":{"line":826,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":827,"column":0},"generated":{"line":827,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":828,"column":0},"generated":{"line":828,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":829,"column":0},"generated":{"line":829,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":830,"column":0},"generated":{"line":830,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":831,"column":0},"generated":{"line":831,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":832,"column":0},"generated":{"line":832,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":833,"column":0},"generated":{"line":833,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":834,"column":0},"generated":{"line":834,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":835,"column":0},"generated":{"line":835,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":836,"column":0},"generated":{"line":836,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":837,"column":0},"generated":{"line":837,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":838,"column":0},"generated":{"line":838,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":839,"column":0},"generated":{"line":839,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":840,"column":0},"generated":{"line":840,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":841,"column":0},"generated":{"line":841,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":842,"column":0},"generated":{"line":842,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":843,"column":0},"generated":{"line":843,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":844,"column":0},"generated":{"line":844,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":845,"column":0},"generated":{"line":845,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":846,"column":0},"generated":{"line":846,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":847,"column":0},"generated":{"line":847,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":848,"column":0},"generated":{"line":848,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":849,"column":0},"generated":{"line":849,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":850,"column":0},"generated":{"line":850,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":851,"column":0},"generated":{"line":851,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":852,"column":0},"generated":{"line":852,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":853,"column":0},"generated":{"line":853,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":854,"column":0},"generated":{"line":854,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":855,"column":0},"generated":{"line":855,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":856,"column":0},"generated":{"line":856,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":857,"column":0},"generated":{"line":857,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":858,"column":0},"generated":{"line":858,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":859,"column":0},"generated":{"line":859,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":860,"column":0},"generated":{"line":860,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":861,"column":0},"generated":{"line":861,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":862,"column":0},"generated":{"line":862,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":863,"column":0},"generated":{"line":863,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":864,"column":0},"generated":{"line":864,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":865,"column":0},"generated":{"line":865,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":866,"column":0},"generated":{"line":866,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":867,"column":0},"generated":{"line":867,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":868,"column":0},"generated":{"line":868,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":869,"column":0},"generated":{"line":869,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":870,"column":0},"generated":{"line":870,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":871,"column":0},"generated":{"line":871,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":872,"column":0},"generated":{"line":872,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":873,"column":0},"generated":{"line":873,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":874,"column":0},"generated":{"line":874,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":875,"column":0},"generated":{"line":875,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":876,"column":0},"generated":{"line":876,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":877,"column":0},"generated":{"line":877,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":878,"column":0},"generated":{"line":878,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":879,"column":0},"generated":{"line":879,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":880,"column":0},"generated":{"line":880,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":881,"column":0},"generated":{"line":881,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":882,"column":0},"generated":{"line":882,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":883,"column":0},"generated":{"line":883,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":884,"column":0},"generated":{"line":884,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":885,"column":0},"generated":{"line":885,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":886,"column":0},"generated":{"line":886,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":887,"column":0},"generated":{"line":887,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":888,"column":0},"generated":{"line":888,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":889,"column":0},"generated":{"line":889,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":890,"column":0},"generated":{"line":890,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":891,"column":0},"generated":{"line":891,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":892,"column":0},"generated":{"line":892,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":893,"column":0},"generated":{"line":893,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":894,"column":0},"generated":{"line":894,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":895,"column":0},"generated":{"line":895,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":896,"column":0},"generated":{"line":896,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":897,"column":0},"generated":{"line":897,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":898,"column":0},"generated":{"line":898,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":899,"column":0},"generated":{"line":899,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":900,"column":0},"generated":{"line":900,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":901,"column":0},"generated":{"line":901,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":902,"column":0},"generated":{"line":902,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":903,"column":0},"generated":{"line":903,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":904,"column":0},"generated":{"line":904,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":905,"column":0},"generated":{"line":905,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":906,"column":0},"generated":{"line":906,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":907,"column":0},"generated":{"line":907,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":908,"column":0},"generated":{"line":908,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":909,"column":0},"generated":{"line":909,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":910,"column":0},"generated":{"line":910,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":911,"column":0},"generated":{"line":911,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":912,"column":0},"generated":{"line":912,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":913,"column":0},"generated":{"line":913,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":914,"column":0},"generated":{"line":914,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":915,"column":0},"generated":{"line":915,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":916,"column":0},"generated":{"line":916,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":917,"column":0},"generated":{"line":917,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":918,"column":0},"generated":{"line":918,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":919,"column":0},"generated":{"line":919,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":920,"column":0},"generated":{"line":920,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":921,"column":0},"generated":{"line":921,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":922,"column":0},"generated":{"line":922,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":923,"column":0},"generated":{"line":923,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":924,"column":0},"generated":{"line":924,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":925,"column":0},"generated":{"line":925,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":926,"column":0},"generated":{"line":926,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":927,"column":0},"generated":{"line":927,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":928,"column":0},"generated":{"line":928,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":929,"column":0},"generated":{"line":929,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":930,"column":0},"generated":{"line":930,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":931,"column":0},"generated":{"line":931,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":932,"column":0},"generated":{"line":932,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":933,"column":0},"generated":{"line":933,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":934,"column":0},"generated":{"line":934,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":935,"column":0},"generated":{"line":935,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":936,"column":0},"generated":{"line":936,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":937,"column":0},"generated":{"line":937,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":938,"column":0},"generated":{"line":938,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":939,"column":0},"generated":{"line":939,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":940,"column":0},"generated":{"line":940,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":941,"column":0},"generated":{"line":941,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":942,"column":0},"generated":{"line":942,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":943,"column":0},"generated":{"line":943,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":944,"column":0},"generated":{"line":944,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":945,"column":0},"generated":{"line":945,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":946,"column":0},"generated":{"line":946,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":947,"column":0},"generated":{"line":947,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":948,"column":0},"generated":{"line":948,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":949,"column":0},"generated":{"line":949,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":950,"column":0},"generated":{"line":950,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":951,"column":0},"generated":{"line":951,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":952,"column":0},"generated":{"line":952,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":953,"column":0},"generated":{"line":953,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":954,"column":0},"generated":{"line":954,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":955,"column":0},"generated":{"line":955,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":956,"column":0},"generated":{"line":956,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":957,"column":0},"generated":{"line":957,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":958,"column":0},"generated":{"line":958,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":959,"column":0},"generated":{"line":959,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":960,"column":0},"generated":{"line":960,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":961,"column":0},"generated":{"line":961,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":962,"column":0},"generated":{"line":962,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":963,"column":0},"generated":{"line":963,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":964,"column":0},"generated":{"line":964,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":965,"column":0},"generated":{"line":965,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":966,"column":0},"generated":{"line":966,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":967,"column":0},"generated":{"line":967,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":968,"column":0},"generated":{"line":968,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":969,"column":0},"generated":{"line":969,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":970,"column":0},"generated":{"line":970,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":971,"column":0},"generated":{"line":971,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":972,"column":0},"generated":{"line":972,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":973,"column":0},"generated":{"line":973,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":974,"column":0},"generated":{"line":974,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":975,"column":0},"generated":{"line":975,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":976,"column":0},"generated":{"line":976,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":977,"column":0},"generated":{"line":977,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":978,"column":0},"generated":{"line":978,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":979,"column":0},"generated":{"line":979,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":980,"column":0},"generated":{"line":980,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":981,"column":0},"generated":{"line":981,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":982,"column":0},"generated":{"line":982,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":983,"column":0},"generated":{"line":983,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":984,"column":0},"generated":{"line":984,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":985,"column":0},"generated":{"line":985,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":986,"column":0},"generated":{"line":986,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":987,"column":0},"generated":{"line":987,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":988,"column":0},"generated":{"line":988,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":989,"column":0},"generated":{"line":989,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":990,"column":0},"generated":{"line":990,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":991,"column":0},"generated":{"line":991,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":992,"column":0},"generated":{"line":992,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":993,"column":0},"generated":{"line":993,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":994,"column":0},"generated":{"line":994,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":995,"column":0},"generated":{"line":995,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":996,"column":0},"generated":{"line":996,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":997,"column":0},"generated":{"line":997,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":998,"column":0},"generated":{"line":998,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":999,"column":0},"generated":{"line":999,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1000,"column":0},"generated":{"line":1000,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1001,"column":0},"generated":{"line":1001,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1002,"column":0},"generated":{"line":1002,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1003,"column":0},"generated":{"line":1003,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1004,"column":0},"generated":{"line":1004,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1005,"column":0},"generated":{"line":1005,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1006,"column":0},"generated":{"line":1006,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1007,"column":0},"generated":{"line":1007,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1008,"column":0},"generated":{"line":1008,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1009,"column":0},"generated":{"line":1009,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1010,"column":0},"generated":{"line":1010,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1011,"column":0},"generated":{"line":1011,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1012,"column":0},"generated":{"line":1012,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1013,"column":0},"generated":{"line":1013,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1014,"column":0},"generated":{"line":1014,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1015,"column":0},"generated":{"line":1015,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1016,"column":0},"generated":{"line":1016,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1017,"column":0},"generated":{"line":1017,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1018,"column":0},"generated":{"line":1018,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1019,"column":0},"generated":{"line":1019,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1020,"column":0},"generated":{"line":1020,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1021,"column":0},"generated":{"line":1021,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1022,"column":0},"generated":{"line":1022,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1023,"column":0},"generated":{"line":1023,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1024,"column":0},"generated":{"line":1024,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1025,"column":0},"generated":{"line":1025,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1026,"column":0},"generated":{"line":1026,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1027,"column":0},"generated":{"line":1027,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1028,"column":0},"generated":{"line":1028,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1029,"column":0},"generated":{"line":1029,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1030,"column":0},"generated":{"line":1030,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1031,"column":0},"generated":{"line":1031,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1032,"column":0},"generated":{"line":1032,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1033,"column":0},"generated":{"line":1033,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1034,"column":0},"generated":{"line":1034,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1035,"column":0},"generated":{"line":1035,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1036,"column":0},"generated":{"line":1036,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1037,"column":0},"generated":{"line":1037,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1038,"column":0},"generated":{"line":1038,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1039,"column":0},"generated":{"line":1039,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1040,"column":0},"generated":{"line":1040,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1041,"column":0},"generated":{"line":1041,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1042,"column":0},"generated":{"line":1042,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1043,"column":0},"generated":{"line":1043,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1044,"column":0},"generated":{"line":1044,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1045,"column":0},"generated":{"line":1045,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1046,"column":0},"generated":{"line":1046,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1047,"column":0},"generated":{"line":1047,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1048,"column":0},"generated":{"line":1048,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1049,"column":0},"generated":{"line":1049,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1050,"column":0},"generated":{"line":1050,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1051,"column":0},"generated":{"line":1051,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1052,"column":0},"generated":{"line":1052,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1053,"column":0},"generated":{"line":1053,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1054,"column":0},"generated":{"line":1054,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1055,"column":0},"generated":{"line":1055,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1056,"column":0},"generated":{"line":1056,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1057,"column":0},"generated":{"line":1057,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1058,"column":0},"generated":{"line":1058,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1059,"column":0},"generated":{"line":1059,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1060,"column":0},"generated":{"line":1060,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1061,"column":0},"generated":{"line":1061,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1062,"column":0},"generated":{"line":1062,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1063,"column":0},"generated":{"line":1063,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1064,"column":0},"generated":{"line":1064,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1065,"column":0},"generated":{"line":1065,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1066,"column":0},"generated":{"line":1066,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1067,"column":0},"generated":{"line":1067,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1068,"column":0},"generated":{"line":1068,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1069,"column":0},"generated":{"line":1069,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1070,"column":0},"generated":{"line":1070,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1071,"column":0},"generated":{"line":1071,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1072,"column":0},"generated":{"line":1072,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1073,"column":0},"generated":{"line":1073,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1074,"column":0},"generated":{"line":1074,"column":0}},{"source":"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js","original":{"line":1075,"column":0},"generated":{"line":1075,"column":0}}],"sources":{"../node_modules/libp2p-crypto/node_modules/node-forge/lib/pkcs12.js":"/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type ’Attribute’\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n"},"lineCount":1075}},"hash":"1eb2e7416aaef742fd979914fc9d90cd","cacheData":{"env":{}}}