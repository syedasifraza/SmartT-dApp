{"dependencies":[{"name":"/root/nos-client-new/SmartT-dApp/package.json","includedInParent":true,"mtime":1533711856700},{"name":"/root/nos-client-new/SmartT-dApp/node_modules/multiaddr/package.json","includedInParent":true,"mtime":499162500000},{"name":"ip","loc":{"line":3,"column":19}},{"name":"ip-address","loc":{"line":4,"column":26}},{"name":"./protocols-table","loc":{"line":5,"column":26}},{"name":"bs58","loc":{"line":6,"column":21}},{"name":"varint","loc":{"line":7,"column":23}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n\nconst ip = require('ip')\nconst ipAddress = require('ip-address')\nconst protocols = require('./protocols-table')\nconst bs58 = require('bs58')\nconst varint = require('varint')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\nfunction Convert (proto, a) {\n  if (a instanceof Buffer) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBuffer(proto, a)\n  }\n}\n\nConvert.toString = function convertToString (proto, buf) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return ip.toString(buf)\n\n    case 6: // tcp\n    case 17: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return buf2port(buf)\n\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n      return buf2str(buf)\n\n    case 421: // ipfs\n      return buf2mh(buf)\n    default:\n      return buf.toString('hex') // no clue. convert to hex\n  }\n}\n\nConvert.toBuffer = function convertToBuffer (proto, str) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n      return ip2buf(new ipAddress.Address4(str))\n    case 41: // ipv6\n      return ip2buf(new ipAddress.Address6(str))\n\n    case 6: // tcp\n    case 17: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2buf(parseInt(str, 10))\n\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n      return str2buf(str)\n\n    case 421: // ipfs\n      return mh2buf(str)\n    default:\n      return Buffer.from(str, 'hex') // no clue. convert from hex\n  }\n}\n\nfunction ip2buf (ipaddr) {\n  if (!ipaddr.isValid()) throw new Error('invalid ip address')\n  return ip.toBuffer(ipaddr.address)\n}\n\nfunction port2buf (port) {\n  const buf = Buffer.alloc(2)\n  buf.writeUInt16BE(port, 0)\n  return buf\n}\n\nfunction buf2port (buf) {\n  return buf.readUInt16BE(0)\n}\n\nfunction str2buf (str) {\n  const buf = Buffer.from(str)\n  const size = Buffer.from(varint.encode(buf.length))\n  return Buffer.concat([size, buf])\n}\n\nfunction buf2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return buf.toString()\n}\n\nfunction mh2buf (hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = Buffer.from(bs58.decode(hash))\n  const size = Buffer.from(varint.encode(mh.length))\n  return Buffer.concat([size, mh])\n}\n\nfunction buf2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return bs58.encode(address)\n}\n","map":{"mappings":[{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/multiaddr/src/convert.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}}],"sources":{"../node_modules/multiaddr/src/convert.js":"'use strict'\n\nconst ip = require('ip')\nconst ipAddress = require('ip-address')\nconst protocols = require('./protocols-table')\nconst bs58 = require('bs58')\nconst varint = require('varint')\n\nmodule.exports = Convert\n\n// converts (serializes) addresses\nfunction Convert (proto, a) {\n  if (a instanceof Buffer) {\n    return Convert.toString(proto, a)\n  } else {\n    return Convert.toBuffer(proto, a)\n  }\n}\n\nConvert.toString = function convertToString (proto, buf) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n    case 41: // ipv6\n      return ip.toString(buf)\n\n    case 6: // tcp\n    case 17: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return buf2port(buf)\n\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n      return buf2str(buf)\n\n    case 421: // ipfs\n      return buf2mh(buf)\n    default:\n      return buf.toString('hex') // no clue. convert to hex\n  }\n}\n\nConvert.toBuffer = function convertToBuffer (proto, str) {\n  proto = protocols(proto)\n  switch (proto.code) {\n    case 4: // ipv4\n      return ip2buf(new ipAddress.Address4(str))\n    case 41: // ipv6\n      return ip2buf(new ipAddress.Address6(str))\n\n    case 6: // tcp\n    case 17: // udp\n    case 33: // dccp\n    case 132: // sctp\n      return port2buf(parseInt(str, 10))\n\n    case 54: // dns4\n    case 55: // dns6\n    case 56: // dnsaddr\n      return str2buf(str)\n\n    case 421: // ipfs\n      return mh2buf(str)\n    default:\n      return Buffer.from(str, 'hex') // no clue. convert from hex\n  }\n}\n\nfunction ip2buf (ipaddr) {\n  if (!ipaddr.isValid()) throw new Error('invalid ip address')\n  return ip.toBuffer(ipaddr.address)\n}\n\nfunction port2buf (port) {\n  const buf = Buffer.alloc(2)\n  buf.writeUInt16BE(port, 0)\n  return buf\n}\n\nfunction buf2port (buf) {\n  return buf.readUInt16BE(0)\n}\n\nfunction str2buf (str) {\n  const buf = Buffer.from(str)\n  const size = Buffer.from(varint.encode(buf.length))\n  return Buffer.concat([size, buf])\n}\n\nfunction buf2str (buf) {\n  const size = varint.decode(buf)\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return buf.toString()\n}\n\nfunction mh2buf (hash) {\n  // the address is a varint prefixed multihash string representation\n  const mh = Buffer.from(bs58.decode(hash))\n  const size = Buffer.from(varint.encode(mh.length))\n  return Buffer.concat([size, mh])\n}\n\nfunction buf2mh (buf) {\n  const size = varint.decode(buf)\n  const address = buf.slice(varint.decode.bytes)\n\n  if (address.length !== size) {\n    throw new Error('inconsistent lengths')\n  }\n\n  return bs58.encode(address)\n}\n"},"lineCount":121}},"hash":"20ccfc1b341cc85baecba733d24d739f","cacheData":{"env":{}}}