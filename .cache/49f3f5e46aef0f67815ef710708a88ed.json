{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532420826470},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/varint/package.json","includedInParent":true,"mtime":1478286909000}],"generated":{"js":"module.exports=r;var e=128,o=127;function r(t,n){var a,d=0,h=0,i=n=n||0,l=t.length;do{if(i>=l)throw r.bytes=0,new RangeError(\"Could not decode varint\");a=t[i++],d+=h<28?(a&o)<<h:(a&o)*Math.pow(2,h),h+=7}while(a>=e);return r.bytes=i-n,d}","map":{"mappings":[{"source":"../node_modules/varint/decode.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/varint/decode.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}}],"sources":{"../node_modules/varint/decode.js":"module.exports = read\n\nvar MSB = 0x80\n  , REST = 0x7F\n\nfunction read(buf, offset) {\n  var res    = 0\n    , offset = offset || 0\n    , shift  = 0\n    , counter = offset\n    , b\n    , l = buf.length\n\n  do {\n    if (counter >= l) {\n      read.bytes = 0\n      throw new RangeError('Could not decode varint')\n    }\n    b = buf[counter++]\n    res += shift < 28\n      ? (b & REST) << shift\n      : (b & REST) * Math.pow(2, shift)\n    shift += 7\n  } while (b >= MSB)\n\n  read.bytes = counter - offset\n\n  return res\n}\n"},"lineCount":30}},"hash":"871da4a17665e736dba466be82d649e6","cacheData":{"env":{}}}