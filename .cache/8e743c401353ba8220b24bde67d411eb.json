{"dependencies":[{"name":"/root/nos-client-new/SmartT-dApp/package.json","includedInParent":true,"mtime":1533711856700},{"name":"/root/nos-client-new/SmartT-dApp/node_modules/browserify-aes/package.json","includedInParent":true,"mtime":499162500000},{"name":"buffer-xor","loc":{"line":1,"column":18}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar e=require(\"buffer\").Buffer,c=require(\"buffer-xor\");function r(e){return e._prev=e._cipher.encryptBlock(e._prev),e._prev}exports.encrypt=function(n,t){for(;n._cache.length<t.length;)n._cache=e.concat([n._cache,r(n)]);var h=n._cache.slice(0,t.length);return n._cache=n._cache.slice(t.length),c(t,h)};","map":{"mappings":[{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/browserify-aes/modes/ofb.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}}],"sources":{"../node_modules/browserify-aes/modes/ofb.js":"var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n"},"lineCount":19}},"hash":"1e7ebe6875e066bc453e29366abad29a","cacheData":{"env":{}}}