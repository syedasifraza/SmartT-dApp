{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532420826470},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/pull-stream/package.json","includedInParent":true,"mtime":1525734385000}],"generated":{"js":"'use strict'\n\nmodule.exports = function drain (op, done) {\n  var read, abort\n\n  function sink (_read) {\n    read = _read\n    if(abort) return sink.abort()\n    //this function is much simpler to write if you\n    //just use recursion, but by using a while loop\n    //we do not blow the stack if the stream happens to be sync.\n    ;(function next() {\n        var loop = true, cbed = false\n        while(loop) {\n          cbed = false\n          read(null, function (end, data) {\n            cbed = true\n            if(end = end || abort) {\n              loop = false\n              if(done) done(end === true ? null : end)\n              else if(end && end !== true)\n                throw end\n            }\n            else if(op && false === op(data) || abort) {\n              loop = false\n              read(abort || true, done || function () {})\n            }\n            else if(!loop){\n              next()\n            }\n          })\n          if(!cbed) {\n            loop = false\n            return\n          }\n        }\n      })()\n  }\n\n  sink.abort = function (err, cb) {\n    if('function' == typeof err)\n      cb = err, err = true\n    abort = err || true\n    if(read) return read(abort, cb || function () {})\n  }\n\n  return sink\n}\n","map":{"mappings":[{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/pull-stream/sinks/drain.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}}],"sources":{"../node_modules/pull-stream/sinks/drain.js":"'use strict'\n\nmodule.exports = function drain (op, done) {\n  var read, abort\n\n  function sink (_read) {\n    read = _read\n    if(abort) return sink.abort()\n    //this function is much simpler to write if you\n    //just use recursion, but by using a while loop\n    //we do not blow the stack if the stream happens to be sync.\n    ;(function next() {\n        var loop = true, cbed = false\n        while(loop) {\n          cbed = false\n          read(null, function (end, data) {\n            cbed = true\n            if(end = end || abort) {\n              loop = false\n              if(done) done(end === true ? null : end)\n              else if(end && end !== true)\n                throw end\n            }\n            else if(op && false === op(data) || abort) {\n              loop = false\n              read(abort || true, done || function () {})\n            }\n            else if(!loop){\n              next()\n            }\n          })\n          if(!cbed) {\n            loop = false\n            return\n          }\n        }\n      })()\n  }\n\n  sink.abort = function (err, cb) {\n    if('function' == typeof err)\n      cb = err, err = true\n    abort = err || true\n    if(read) return read(abort, cb || function () {})\n  }\n\n  return sink\n}\n"},"lineCount":49}},"hash":"d7588bb9bb1f51ac94089a731e73490d","cacheData":{"env":{}}}