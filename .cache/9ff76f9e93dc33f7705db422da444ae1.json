{"dependencies":[{"name":"/root/nos-client-new/my-smartT-dapp/package.json","includedInParent":true,"mtime":1532311653046},{"name":"/root/nos-client-new/my-smartT-dapp/node_modules/protocol-buffers-schema/package.json","includedInParent":true,"mtime":1506079506000},{"name":"./tokenize","loc":{"line":1,"column":23}}],"generated":{"js":"var tokenize = require('./tokenize')\nvar MAX_RANGE = 0x1FFFFFFF\n\n// \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared \"packed\".\"\n// https://developers.google.com/protocol-buffers/docs/encoding#optional\nvar PACKABLE_TYPES = [\n  // varint wire types\n  'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\n  // + ENUMS\n  // 64-bit wire types\n  'fixed64', 'sfixed64', 'double',\n  // 32-bit wire types\n  'fixed32', 'sfixed32', 'float'\n]\n\nvar onfieldoptions = function (tokens) {\n  var opts = {}\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '[':\n      case ',':\n        tokens.shift()\n        var name = tokens.shift()\n        if (name === '(') {       // handling [(A) = B]\n          name = tokens.shift()\n          tokens.shift()          // remove the end of bracket\n        }\n        if (tokens[0] !== '=') throw new Error('Unexpected token in field options: ' + tokens[0])\n        tokens.shift()\n        if (tokens[0] === ']') throw new Error('Unexpected ] in field option')\n        opts[name] = tokens.shift()\n        break\n      case ']':\n        tokens.shift()\n        return opts\n\n      default:\n        throw new Error('Unexpected token in field options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for field options')\n}\n\nvar onfield = function (tokens) {\n  var field = {\n    name: null,\n    type: null,\n    tag: -1,\n    map: null,\n    oneof: null,\n    required: false,\n    repeated: false,\n    options: {}\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '=':\n        tokens.shift()\n        field.tag = Number(tokens.shift())\n        break\n\n      case 'map':\n        field.type = 'map'\n        field.map = {from: null, to: null}\n        tokens.shift()\n        if (tokens[0] !== '<') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.from = tokens.shift()\n        if (tokens[0] !== ',') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.to = tokens.shift()\n        if (tokens[0] !== '>') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case 'repeated':\n      case 'required':\n      case 'optional':\n        var t = tokens.shift()\n        field.required = t === 'required'\n        field.repeated = t === 'repeated'\n        field.type = tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case '[':\n        field.options = onfieldoptions(tokens)\n        break\n\n      case ';':\n        if (field.name === null) throw new Error('Missing field name')\n        if (field.type === null) throw new Error('Missing type in message field: ' + field.name)\n        if (field.tag === -1) throw new Error('Missing tag number in message field: ' + field.name)\n        tokens.shift()\n        return field\n\n      default:\n        throw new Error('Unexpected token in message field: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No ; found for message field')\n}\n\nvar onmessagebody = function (tokens) {\n  var body = {\n    enums: [],\n    messages: [],\n    fields: [],\n    extends: [],\n    extensions: null\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'map':\n      case 'repeated':\n      case 'optional':\n      case 'required':\n        body.fields.push(onfield(tokens))\n        break\n\n      case 'enum':\n        body.enums.push(onenum(tokens))\n        break\n\n      case 'message':\n        body.messages.push(onmessage(tokens))\n        break\n\n      case 'extensions':\n        body.extensions = onextensions(tokens)\n        break\n\n      case 'oneof':\n        tokens.shift()\n        var name = tokens.shift()\n        if (tokens[0] !== '{') throw new Error('Unexpected token in oneof: ' + tokens[0])\n        tokens.shift()\n        while (tokens[0] !== '}') {\n          tokens.unshift('optional')\n          var field = onfield(tokens)\n          field.oneof = name\n          body.fields.push(field)\n        }\n        tokens.shift()\n        break\n\n      case 'extend':\n        body.extends.push(onextend(tokens))\n        break\n\n      case ';':\n        tokens.shift()\n        break\n\n      case 'reserved':\n      case 'option':\n        tokens.shift()\n        while (tokens[0] !== ';') {\n          tokens.shift()\n        }\n        break\n\n      default:\n        // proto3 does not require the use of optional/required, assumed as optional\n        // \"singular: a well-formed message can have zero or one of this field (but not more than one).\"\n        // https://developers.google.com/protocol-buffers/docs/proto3#specifying-field-rules\n        tokens.unshift('optional')\n        body.fields.push(onfield(tokens))\n    }\n  }\n\n  return body\n}\n\nvar onextend = function (tokens) {\n  var out = {\n    name: tokens[1],\n    message: onmessage(tokens)\n  }\n  return out\n}\n\nvar onextensions = function (tokens) {\n  tokens.shift()\n  var from = Number(tokens.shift())\n  if (isNaN(from)) throw new Error('Invalid from in extensions definition')\n  if (tokens.shift() !== 'to') throw new Error(\"Expected keyword 'to' in extensions definition\")\n  var to = tokens.shift()\n  if (to === 'max') to = MAX_RANGE\n  to = Number(to)\n  if (isNaN(to)) throw new Error('Invalid to in extensions definition')\n  if (tokens.shift() !== ';') throw new Error('Missing ; in extensions definition')\n  return {from: from, to: to}\n}\nvar onmessage = function (tokens) {\n  tokens.shift()\n\n  var lvl = 1\n  var body = []\n  var msg = {\n    name: tokens.shift(),\n    enums: [],\n    extends: [],\n    messages: [],\n    fields: []\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '{') lvl++\n    else if (tokens[0] === '}') lvl--\n\n    if (!lvl) {\n      tokens.shift()\n      body = onmessagebody(body)\n      msg.enums = body.enums\n      msg.messages = body.messages\n      msg.fields = body.fields\n      msg.extends = body.extends\n      msg.extensions = body.extensions\n      return msg\n    }\n\n    body.push(tokens.shift())\n  }\n\n  if (lvl) throw new Error('No closing tag for message')\n}\n\nvar onpackagename = function (tokens) {\n  tokens.shift()\n  var name = tokens.shift()\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n  return name\n}\n\nvar onsyntaxversion = function (tokens) {\n  tokens.shift()\n\n  if (tokens[0] !== '=') throw new Error('Expected = but found ' + tokens[0])\n  tokens.shift()\n\n  var version = tokens.shift()\n  switch (version) {\n    case '\"proto2\"':\n      version = 2\n      break\n\n    case '\"proto3\"':\n      version = 3\n      break\n\n    default:\n      throw new Error('Expected protobuf syntax version but found ' + version)\n  }\n\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n\n  return version\n}\n\nvar onenumvalue = function (tokens) {\n  if (tokens.length < 4) throw new Error('Invalid enum value: ' + tokens.slice(0, 3).join(' '))\n  if (tokens[1] !== '=') throw new Error('Expected = but found ' + tokens[1])\n  if (tokens[3] !== ';' && tokens[3] !== '[') throw new Error('Expected ; or [ but found ' + tokens[1])\n\n  var name = tokens.shift()\n  tokens.shift()\n  var val = {\n    value: null,\n    options: {}\n  }\n  val.value = Number(tokens.shift())\n  if (tokens[0] === '[') {\n    val.options = onfieldoptions(tokens)\n  }\n  tokens.shift() // expecting the semicolon here\n\n  return {\n    name: name,\n    val: val\n  }\n}\n\nvar onenum = function (tokens) {\n  tokens.shift()\n  var options = {}\n  var e = {\n    name: tokens.shift(),\n    values: {},\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return e\n    }\n    if (tokens[0] === 'option') {\n      options = onoption(tokens)\n      e.options[options.name] = options.value\n      continue\n    }\n    var val = onenumvalue(tokens)\n    e.values[val.name] = val.val\n  }\n\n  throw new Error('No closing tag for enum')\n}\n\nvar onoption = function (tokens) {\n  var name = null\n  var value = null\n\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  while (tokens.length) {\n    if (tokens[0] === ';') {\n      tokens.shift()\n      return {name: name, value: value}\n    }\n    switch (tokens[0]) {\n      case 'option':\n        tokens.shift()\n\n        var hasBracket = tokens[0] === '('\n        if (hasBracket) tokens.shift()\n\n        name = tokens.shift()\n\n        if (hasBracket) {\n          if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n          tokens.shift()\n        }\n\n        if (tokens[0][0] === '.') {\n          name += tokens.shift()\n        }\n\n        break\n\n      case '=':\n        tokens.shift()\n        if (name === null) throw new Error('Expected key for option with value: ' + tokens[0])\n        value = parse(tokens.shift())\n\n        if (name === 'optimize_for' && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(value)) {\n          throw new Error('Unexpected value for option optimize_for: ' + value)\n        } else if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n        break\n\n      default:\n        throw new Error('Unexpected token in option: ' + tokens[0])\n    }\n  }\n}\n\nvar onoptionMap = function (tokens) {\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  var map = {}\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      return map\n    }\n\n    var hasBracket = tokens[0] === '('\n    if (hasBracket) tokens.shift()\n\n    var key = tokens.shift()\n    if (hasBracket) {\n      if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n      tokens.shift()\n    }\n\n    var value = null\n\n    switch (tokens[0]) {\n      case ':':\n        if (map[key] !== undefined) throw new Error('Duplicate option map key ' + key)\n\n        tokens.shift()\n\n        value = parse(tokens.shift())\n\n        if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n\n        map[key] = value\n\n        if (tokens[0] === ';') {\n          tokens.shift()\n        }\n        break\n\n      case '{':\n        tokens.shift()\n        value = onoptionMap(tokens)\n\n        if (map[key] === undefined) map[key] = []\n        if (!Array.isArray(map[key])) throw new Error('Duplicate option map key ' + key)\n\n        map[key].push(value)\n        break\n\n      default:\n        throw new Error('Unexpected token in option map: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for option map')\n}\n\nvar onimport = function (tokens) {\n  tokens.shift()\n  var file = tokens.shift().replace(/^\"+|\"+$/gm, '')\n\n  if (tokens[0] !== ';') throw new Error('Unexpected token: ' + tokens[0] + '. Expected \";\"')\n\n  tokens.shift()\n  return file\n}\n\nvar onservice = function (tokens) {\n  tokens.shift()\n\n  var service = {\n    name: tokens.shift(),\n    methods: [],\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return service\n    }\n\n    switch (tokens[0]) {\n      case 'option':\n        var opt = onoption(tokens)\n        if (service.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n        service.options[opt.name] = opt.value\n        break\n      case 'rpc':\n        service.methods.push(onrpc(tokens))\n        break\n      default:\n        throw new Error('Unexpected token in service: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for service')\n}\n\nvar onrpc = function (tokens) {\n  tokens.shift()\n\n  var rpc = {\n    name: tokens.shift(),\n    input_type: null,\n    output_type: null,\n    client_streaming: false,\n    server_streaming: false,\n    options: {}\n  }\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.client_streaming = true\n  }\n\n  rpc.input_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== 'returns') throw new Error('Expected returns but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.server_streaming = true\n  }\n\n  rpc.output_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === ';') {\n    tokens.shift()\n    return rpc\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return rpc\n    }\n\n    if (tokens[0] === 'option') {\n      var opt = onoption(tokens)\n      if (rpc.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n      rpc.options[opt.name] = opt.value\n    } else {\n      throw new Error('Unexpected token in rpc options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for rpc')\n}\n\nvar parse = function (buf) {\n  var tokens = tokenize(buf.toString())\n  // check for isolated strings in tokens by looking for opening quote\n  for (var i = 0; i < tokens.length; i++) {\n    if (/^(\"|')([^'\"]*)$/.test(tokens[i])) {\n      var j\n      if (tokens[i].length === 1) {\n        j = i + 1\n      } else {\n        j = i\n      }\n      // look ahead for the closing quote and collapse all\n      // in-between tokens into a single token\n      for (j; j < tokens.length; j++) {\n        if (/^([^'\"]*)(\"|')$/.test(tokens[j])) {\n          tokens = tokens.slice(0, i).concat(tokens.slice(i, j + 1).join('')).concat(tokens.slice(j + 1))\n          break\n        }\n      }\n    }\n  }\n  var schema = {\n    syntax: 3,\n    package: null,\n    imports: [],\n    enums: [],\n    messages: [],\n    options: {},\n    extends: []\n  }\n\n  var firstline = true\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'package':\n        schema.package = onpackagename(tokens)\n        break\n\n      case 'syntax':\n        if (!firstline) throw new Error('Protobuf syntax version should be first thing in file')\n        schema.syntax = onsyntaxversion(tokens)\n        break\n\n      case 'message':\n        schema.messages.push(onmessage(tokens))\n        break\n\n      case 'enum':\n        schema.enums.push(onenum(tokens))\n        break\n\n      case 'option':\n        var opt = onoption(tokens)\n        if (schema.options[opt.name]) throw new Error('Duplicate option ' + opt.name)\n        schema.options[opt.name] = opt.value\n        break\n\n      case 'import':\n        schema.imports.push(onimport(tokens))\n        break\n\n      case 'extend':\n        schema.extends.push(onextend(tokens))\n        break\n\n      case 'service':\n        if (!schema.services) schema.services = []\n        schema.services.push(onservice(tokens))\n        break\n\n      default:\n        throw new Error('Unexpected token: ' + tokens[0])\n    }\n    firstline = false\n  }\n\n  // now iterate over messages and propagate extends\n  schema.extends.forEach(function (ext) {\n    schema.messages.forEach(function (msg) {\n      if (msg.name === ext.name) {\n        ext.message.fields.forEach(function (field) {\n          if (!msg.extensions || field.tag < msg.extensions.from || field.tag > msg.extensions.to) {\n            throw new Error(msg.name + ' does not declare ' + field.tag + ' as an extension number')\n          }\n          msg.fields.push(field)\n        })\n      }\n    })\n  })\n\n  schema.messages.forEach(function (msg) {\n    msg.fields.forEach(function (field) {\n      var fieldSplit\n      var messageName\n      var nestedEnumName\n      var message\n\n      function enumNameIsFieldType (en) {\n        return en.name === field.type\n      }\n\n      function enumNameIsNestedEnumName (en) {\n        return en.name === nestedEnumName\n      }\n\n      if (field.options && field.options.packed === 'true') {\n        if (PACKABLE_TYPES.indexOf(field.type) === -1) {\n          // let's see if it's an enum\n          if (field.type.indexOf('.') === -1) {\n            if (msg.enums && msg.enums.some(enumNameIsFieldType)) {\n              return\n            }\n          } else {\n            fieldSplit = field.type.split('.')\n            if (fieldSplit.length > 2) {\n              throw new Error('what is this?')\n            }\n\n            messageName = fieldSplit[0]\n            nestedEnumName = fieldSplit[1]\n\n            schema.messages.some(function (msg) {\n              if (msg.name === messageName) {\n                message = msg\n                return msg\n              }\n            })\n\n            if (message && message.enums && message.enums.some(enumNameIsNestedEnumName)) {\n              return\n            }\n          }\n\n          throw new Error(\n            'Fields of type ' + field.type + ' cannot be declared [packed=true]. ' +\n            'Only repeated fields of primitive numeric types (types which use ' +\n            'the varint, 32-bit, or 64-bit wire types) can be declared \"packed\". ' +\n            'See https://developers.google.com/protocol-buffers/docs/encoding#optional'\n          )\n        }\n      }\n    })\n  })\n\n  return schema\n}\n\nmodule.exports = parse\n","map":{"mappings":[{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"../node_modules/protocol-buffers-schema/parse.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}}],"sources":{"../node_modules/protocol-buffers-schema/parse.js":"var tokenize = require('./tokenize')\nvar MAX_RANGE = 0x1FFFFFFF\n\n// \"Only repeated fields of primitive numeric types (types which use the varint, 32-bit, or 64-bit wire types) can be declared \"packed\".\"\n// https://developers.google.com/protocol-buffers/docs/encoding#optional\nvar PACKABLE_TYPES = [\n  // varint wire types\n  'int32', 'int64', 'uint32', 'uint64', 'sint32', 'sint64', 'bool',\n  // + ENUMS\n  // 64-bit wire types\n  'fixed64', 'sfixed64', 'double',\n  // 32-bit wire types\n  'fixed32', 'sfixed32', 'float'\n]\n\nvar onfieldoptions = function (tokens) {\n  var opts = {}\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '[':\n      case ',':\n        tokens.shift()\n        var name = tokens.shift()\n        if (name === '(') {       // handling [(A) = B]\n          name = tokens.shift()\n          tokens.shift()          // remove the end of bracket\n        }\n        if (tokens[0] !== '=') throw new Error('Unexpected token in field options: ' + tokens[0])\n        tokens.shift()\n        if (tokens[0] === ']') throw new Error('Unexpected ] in field option')\n        opts[name] = tokens.shift()\n        break\n      case ']':\n        tokens.shift()\n        return opts\n\n      default:\n        throw new Error('Unexpected token in field options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for field options')\n}\n\nvar onfield = function (tokens) {\n  var field = {\n    name: null,\n    type: null,\n    tag: -1,\n    map: null,\n    oneof: null,\n    required: false,\n    repeated: false,\n    options: {}\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case '=':\n        tokens.shift()\n        field.tag = Number(tokens.shift())\n        break\n\n      case 'map':\n        field.type = 'map'\n        field.map = {from: null, to: null}\n        tokens.shift()\n        if (tokens[0] !== '<') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.from = tokens.shift()\n        if (tokens[0] !== ',') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.map.to = tokens.shift()\n        if (tokens[0] !== '>') throw new Error('Unexpected token in map type: ' + tokens[0])\n        tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case 'repeated':\n      case 'required':\n      case 'optional':\n        var t = tokens.shift()\n        field.required = t === 'required'\n        field.repeated = t === 'repeated'\n        field.type = tokens.shift()\n        field.name = tokens.shift()\n        break\n\n      case '[':\n        field.options = onfieldoptions(tokens)\n        break\n\n      case ';':\n        if (field.name === null) throw new Error('Missing field name')\n        if (field.type === null) throw new Error('Missing type in message field: ' + field.name)\n        if (field.tag === -1) throw new Error('Missing tag number in message field: ' + field.name)\n        tokens.shift()\n        return field\n\n      default:\n        throw new Error('Unexpected token in message field: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No ; found for message field')\n}\n\nvar onmessagebody = function (tokens) {\n  var body = {\n    enums: [],\n    messages: [],\n    fields: [],\n    extends: [],\n    extensions: null\n  }\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'map':\n      case 'repeated':\n      case 'optional':\n      case 'required':\n        body.fields.push(onfield(tokens))\n        break\n\n      case 'enum':\n        body.enums.push(onenum(tokens))\n        break\n\n      case 'message':\n        body.messages.push(onmessage(tokens))\n        break\n\n      case 'extensions':\n        body.extensions = onextensions(tokens)\n        break\n\n      case 'oneof':\n        tokens.shift()\n        var name = tokens.shift()\n        if (tokens[0] !== '{') throw new Error('Unexpected token in oneof: ' + tokens[0])\n        tokens.shift()\n        while (tokens[0] !== '}') {\n          tokens.unshift('optional')\n          var field = onfield(tokens)\n          field.oneof = name\n          body.fields.push(field)\n        }\n        tokens.shift()\n        break\n\n      case 'extend':\n        body.extends.push(onextend(tokens))\n        break\n\n      case ';':\n        tokens.shift()\n        break\n\n      case 'reserved':\n      case 'option':\n        tokens.shift()\n        while (tokens[0] !== ';') {\n          tokens.shift()\n        }\n        break\n\n      default:\n        // proto3 does not require the use of optional/required, assumed as optional\n        // \"singular: a well-formed message can have zero or one of this field (but not more than one).\"\n        // https://developers.google.com/protocol-buffers/docs/proto3#specifying-field-rules\n        tokens.unshift('optional')\n        body.fields.push(onfield(tokens))\n    }\n  }\n\n  return body\n}\n\nvar onextend = function (tokens) {\n  var out = {\n    name: tokens[1],\n    message: onmessage(tokens)\n  }\n  return out\n}\n\nvar onextensions = function (tokens) {\n  tokens.shift()\n  var from = Number(tokens.shift())\n  if (isNaN(from)) throw new Error('Invalid from in extensions definition')\n  if (tokens.shift() !== 'to') throw new Error(\"Expected keyword 'to' in extensions definition\")\n  var to = tokens.shift()\n  if (to === 'max') to = MAX_RANGE\n  to = Number(to)\n  if (isNaN(to)) throw new Error('Invalid to in extensions definition')\n  if (tokens.shift() !== ';') throw new Error('Missing ; in extensions definition')\n  return {from: from, to: to}\n}\nvar onmessage = function (tokens) {\n  tokens.shift()\n\n  var lvl = 1\n  var body = []\n  var msg = {\n    name: tokens.shift(),\n    enums: [],\n    extends: [],\n    messages: [],\n    fields: []\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '{') lvl++\n    else if (tokens[0] === '}') lvl--\n\n    if (!lvl) {\n      tokens.shift()\n      body = onmessagebody(body)\n      msg.enums = body.enums\n      msg.messages = body.messages\n      msg.fields = body.fields\n      msg.extends = body.extends\n      msg.extensions = body.extensions\n      return msg\n    }\n\n    body.push(tokens.shift())\n  }\n\n  if (lvl) throw new Error('No closing tag for message')\n}\n\nvar onpackagename = function (tokens) {\n  tokens.shift()\n  var name = tokens.shift()\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n  return name\n}\n\nvar onsyntaxversion = function (tokens) {\n  tokens.shift()\n\n  if (tokens[0] !== '=') throw new Error('Expected = but found ' + tokens[0])\n  tokens.shift()\n\n  var version = tokens.shift()\n  switch (version) {\n    case '\"proto2\"':\n      version = 2\n      break\n\n    case '\"proto3\"':\n      version = 3\n      break\n\n    default:\n      throw new Error('Expected protobuf syntax version but found ' + version)\n  }\n\n  if (tokens[0] !== ';') throw new Error('Expected ; but found ' + tokens[0])\n  tokens.shift()\n\n  return version\n}\n\nvar onenumvalue = function (tokens) {\n  if (tokens.length < 4) throw new Error('Invalid enum value: ' + tokens.slice(0, 3).join(' '))\n  if (tokens[1] !== '=') throw new Error('Expected = but found ' + tokens[1])\n  if (tokens[3] !== ';' && tokens[3] !== '[') throw new Error('Expected ; or [ but found ' + tokens[1])\n\n  var name = tokens.shift()\n  tokens.shift()\n  var val = {\n    value: null,\n    options: {}\n  }\n  val.value = Number(tokens.shift())\n  if (tokens[0] === '[') {\n    val.options = onfieldoptions(tokens)\n  }\n  tokens.shift() // expecting the semicolon here\n\n  return {\n    name: name,\n    val: val\n  }\n}\n\nvar onenum = function (tokens) {\n  tokens.shift()\n  var options = {}\n  var e = {\n    name: tokens.shift(),\n    values: {},\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return e\n    }\n    if (tokens[0] === 'option') {\n      options = onoption(tokens)\n      e.options[options.name] = options.value\n      continue\n    }\n    var val = onenumvalue(tokens)\n    e.values[val.name] = val.val\n  }\n\n  throw new Error('No closing tag for enum')\n}\n\nvar onoption = function (tokens) {\n  var name = null\n  var value = null\n\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  while (tokens.length) {\n    if (tokens[0] === ';') {\n      tokens.shift()\n      return {name: name, value: value}\n    }\n    switch (tokens[0]) {\n      case 'option':\n        tokens.shift()\n\n        var hasBracket = tokens[0] === '('\n        if (hasBracket) tokens.shift()\n\n        name = tokens.shift()\n\n        if (hasBracket) {\n          if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n          tokens.shift()\n        }\n\n        if (tokens[0][0] === '.') {\n          name += tokens.shift()\n        }\n\n        break\n\n      case '=':\n        tokens.shift()\n        if (name === null) throw new Error('Expected key for option with value: ' + tokens[0])\n        value = parse(tokens.shift())\n\n        if (name === 'optimize_for' && !/^(SPEED|CODE_SIZE|LITE_RUNTIME)$/.test(value)) {\n          throw new Error('Unexpected value for option optimize_for: ' + value)\n        } else if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n        break\n\n      default:\n        throw new Error('Unexpected token in option: ' + tokens[0])\n    }\n  }\n}\n\nvar onoptionMap = function (tokens) {\n  var parse = function (value) {\n    if (value === 'true') return true\n    if (value === 'false') return false\n    return value.replace(/^\"+|\"+$/gm, '')\n  }\n\n  var map = {}\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      return map\n    }\n\n    var hasBracket = tokens[0] === '('\n    if (hasBracket) tokens.shift()\n\n    var key = tokens.shift()\n    if (hasBracket) {\n      if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n      tokens.shift()\n    }\n\n    var value = null\n\n    switch (tokens[0]) {\n      case ':':\n        if (map[key] !== undefined) throw new Error('Duplicate option map key ' + key)\n\n        tokens.shift()\n\n        value = parse(tokens.shift())\n\n        if (value === '{') {\n          // option foo = {bar: baz}\n          value = onoptionMap(tokens)\n        }\n\n        map[key] = value\n\n        if (tokens[0] === ';') {\n          tokens.shift()\n        }\n        break\n\n      case '{':\n        tokens.shift()\n        value = onoptionMap(tokens)\n\n        if (map[key] === undefined) map[key] = []\n        if (!Array.isArray(map[key])) throw new Error('Duplicate option map key ' + key)\n\n        map[key].push(value)\n        break\n\n      default:\n        throw new Error('Unexpected token in option map: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for option map')\n}\n\nvar onimport = function (tokens) {\n  tokens.shift()\n  var file = tokens.shift().replace(/^\"+|\"+$/gm, '')\n\n  if (tokens[0] !== ';') throw new Error('Unexpected token: ' + tokens[0] + '. Expected \";\"')\n\n  tokens.shift()\n  return file\n}\n\nvar onservice = function (tokens) {\n  tokens.shift()\n\n  var service = {\n    name: tokens.shift(),\n    methods: [],\n    options: {}\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return service\n    }\n\n    switch (tokens[0]) {\n      case 'option':\n        var opt = onoption(tokens)\n        if (service.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n        service.options[opt.name] = opt.value\n        break\n      case 'rpc':\n        service.methods.push(onrpc(tokens))\n        break\n      default:\n        throw new Error('Unexpected token in service: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for service')\n}\n\nvar onrpc = function (tokens) {\n  tokens.shift()\n\n  var rpc = {\n    name: tokens.shift(),\n    input_type: null,\n    output_type: null,\n    client_streaming: false,\n    server_streaming: false,\n    options: {}\n  }\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.client_streaming = true\n  }\n\n  rpc.input_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== 'returns') throw new Error('Expected returns but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] !== '(') throw new Error('Expected ( but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === 'stream') {\n    tokens.shift()\n    rpc.server_streaming = true\n  }\n\n  rpc.output_type = tokens.shift()\n\n  if (tokens[0] !== ')') throw new Error('Expected ) but found ' + tokens[0])\n  tokens.shift()\n\n  if (tokens[0] === ';') {\n    tokens.shift()\n    return rpc\n  }\n\n  if (tokens[0] !== '{') throw new Error('Expected { but found ' + tokens[0])\n  tokens.shift()\n\n  while (tokens.length) {\n    if (tokens[0] === '}') {\n      tokens.shift()\n      // there goes optional semicolon after the enclosing \"}\"\n      if (tokens[0] === ';') tokens.shift()\n      return rpc\n    }\n\n    if (tokens[0] === 'option') {\n      var opt = onoption(tokens)\n      if (rpc.options[opt.name] !== undefined) throw new Error('Duplicate option ' + opt.name)\n      rpc.options[opt.name] = opt.value\n    } else {\n      throw new Error('Unexpected token in rpc options: ' + tokens[0])\n    }\n  }\n\n  throw new Error('No closing tag for rpc')\n}\n\nvar parse = function (buf) {\n  var tokens = tokenize(buf.toString())\n  // check for isolated strings in tokens by looking for opening quote\n  for (var i = 0; i < tokens.length; i++) {\n    if (/^(\"|')([^'\"]*)$/.test(tokens[i])) {\n      var j\n      if (tokens[i].length === 1) {\n        j = i + 1\n      } else {\n        j = i\n      }\n      // look ahead for the closing quote and collapse all\n      // in-between tokens into a single token\n      for (j; j < tokens.length; j++) {\n        if (/^([^'\"]*)(\"|')$/.test(tokens[j])) {\n          tokens = tokens.slice(0, i).concat(tokens.slice(i, j + 1).join('')).concat(tokens.slice(j + 1))\n          break\n        }\n      }\n    }\n  }\n  var schema = {\n    syntax: 3,\n    package: null,\n    imports: [],\n    enums: [],\n    messages: [],\n    options: {},\n    extends: []\n  }\n\n  var firstline = true\n\n  while (tokens.length) {\n    switch (tokens[0]) {\n      case 'package':\n        schema.package = onpackagename(tokens)\n        break\n\n      case 'syntax':\n        if (!firstline) throw new Error('Protobuf syntax version should be first thing in file')\n        schema.syntax = onsyntaxversion(tokens)\n        break\n\n      case 'message':\n        schema.messages.push(onmessage(tokens))\n        break\n\n      case 'enum':\n        schema.enums.push(onenum(tokens))\n        break\n\n      case 'option':\n        var opt = onoption(tokens)\n        if (schema.options[opt.name]) throw new Error('Duplicate option ' + opt.name)\n        schema.options[opt.name] = opt.value\n        break\n\n      case 'import':\n        schema.imports.push(onimport(tokens))\n        break\n\n      case 'extend':\n        schema.extends.push(onextend(tokens))\n        break\n\n      case 'service':\n        if (!schema.services) schema.services = []\n        schema.services.push(onservice(tokens))\n        break\n\n      default:\n        throw new Error('Unexpected token: ' + tokens[0])\n    }\n    firstline = false\n  }\n\n  // now iterate over messages and propagate extends\n  schema.extends.forEach(function (ext) {\n    schema.messages.forEach(function (msg) {\n      if (msg.name === ext.name) {\n        ext.message.fields.forEach(function (field) {\n          if (!msg.extensions || field.tag < msg.extensions.from || field.tag > msg.extensions.to) {\n            throw new Error(msg.name + ' does not declare ' + field.tag + ' as an extension number')\n          }\n          msg.fields.push(field)\n        })\n      }\n    })\n  })\n\n  schema.messages.forEach(function (msg) {\n    msg.fields.forEach(function (field) {\n      var fieldSplit\n      var messageName\n      var nestedEnumName\n      var message\n\n      function enumNameIsFieldType (en) {\n        return en.name === field.type\n      }\n\n      function enumNameIsNestedEnumName (en) {\n        return en.name === nestedEnumName\n      }\n\n      if (field.options && field.options.packed === 'true') {\n        if (PACKABLE_TYPES.indexOf(field.type) === -1) {\n          // let's see if it's an enum\n          if (field.type.indexOf('.') === -1) {\n            if (msg.enums && msg.enums.some(enumNameIsFieldType)) {\n              return\n            }\n          } else {\n            fieldSplit = field.type.split('.')\n            if (fieldSplit.length > 2) {\n              throw new Error('what is this?')\n            }\n\n            messageName = fieldSplit[0]\n            nestedEnumName = fieldSplit[1]\n\n            schema.messages.some(function (msg) {\n              if (msg.name === messageName) {\n                message = msg\n                return msg\n              }\n            })\n\n            if (message && message.enums && message.enums.some(enumNameIsNestedEnumName)) {\n              return\n            }\n          }\n\n          throw new Error(\n            'Fields of type ' + field.type + ' cannot be declared [packed=true]. ' +\n            'Only repeated fields of primitive numeric types (types which use ' +\n            'the varint, 32-bit, or 64-bit wire types) can be declared \"packed\". ' +\n            'See https://developers.google.com/protocol-buffers/docs/encoding#optional'\n          )\n        }\n      }\n    })\n  })\n\n  return schema\n}\n\nmodule.exports = parse\n"},"lineCount":709}},"hash":"f902ad6ece776e818c571544bbecc8b2","cacheData":{"env":{}}}