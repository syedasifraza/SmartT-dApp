{"dependencies":[{"name":"/root/nos-client-new/SmartT-dApp/package.json","includedInParent":true,"mtime":1533711856700},{"name":"/root/nos-client-new/SmartT-dApp/node_modules/multibase/package.json","includedInParent":true,"mtime":1514804205000},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  let length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  let output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  let length = buffer.byteLength\n  let view = new Uint8Array(buffer)\n  let padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 2)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Buffer.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (let char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n","map":{"mappings":[{"source":"../node_modules/multibase/src/base32.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/multibase/src/base32.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}}],"sources":{"../node_modules/multibase/src/base32.js":"'use strict'\n\nfunction decode (input, alphabet) {\n  input = input.replace(new RegExp('=', 'g'), '')\n  let length = input.length\n\n  let bits = 0\n  let value = 0\n\n  let index = 0\n  let output = new Uint8Array((length * 5 / 8) | 0)\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 5) | alphabet.indexOf(input[i])\n    bits += 5\n\n    if (bits >= 8) {\n      output[index++] = (value >>> (bits - 8)) & 255\n      bits -= 8\n    }\n  }\n\n  return output.buffer\n}\n\nfunction encode (buffer, alphabet) {\n  let length = buffer.byteLength\n  let view = new Uint8Array(buffer)\n  let padding = alphabet.indexOf('=') === alphabet.length - 1\n\n  if (padding) {\n    alphabet = alphabet.substring(0, alphabet.length - 2)\n  }\n\n  let bits = 0\n  let value = 0\n  let output = ''\n\n  for (let i = 0; i < length; i++) {\n    value = (value << 8) | view[i]\n    bits += 8\n\n    while (bits >= 5) {\n      output += alphabet[(value >>> (bits - 5)) & 31]\n      bits -= 5\n    }\n  }\n\n  if (bits > 0) {\n    output += alphabet[(value << (5 - bits)) & 31]\n  }\n\n  if (padding) {\n    while ((output.length % 8) !== 0) {\n      output += '='\n    }\n  }\n\n  return output\n}\n\nmodule.exports = function base32 (alphabet) {\n  return {\n    encode (input) {\n      if (typeof input === 'string') {\n        return encode(Buffer.from(input), alphabet)\n      }\n\n      return encode(input, alphabet)\n    },\n    decode (input) {\n      for (let char of input) {\n        if (alphabet.indexOf(char) < 0) {\n          throw new Error('invalid base32 character')\n        }\n      }\n\n      return decode(input, alphabet)\n    }\n  }\n}\n"},"lineCount":83}},"hash":"25f6eab2dfdaaa6da8b963d7661fc06d","cacheData":{"env":{}}}