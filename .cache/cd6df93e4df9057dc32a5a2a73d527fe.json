{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532424333180},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/multibase/package.json","includedInParent":true,"mtime":1514804205000}],"generated":{"js":"'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n","map":{"mappings":[{"source":"../node_modules/multibase/src/base.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/multibase/src/base.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"../node_modules/multibase/src/base.js":"'use strict'\n\nclass Base {\n  constructor (name, code, implementation, alphabet) {\n    this.name = name\n    this.code = code\n    this.alphabet = alphabet\n    if (implementation && alphabet) {\n      this.engine = implementation(alphabet)\n    }\n  }\n\n  encode (stringOrBuffer) {\n    return this.engine.encode(stringOrBuffer)\n  }\n\n  decode (stringOrBuffer) {\n    return this.engine.decode(stringOrBuffer)\n  }\n\n  isImplemented () {\n    return this.engine\n  }\n}\n\nmodule.exports = Base\n"},"lineCount":27}},"hash":"8b7c97142e7ca80bf554d50b75a0ab59","cacheData":{"env":{}}}