{"dependencies":[{"name":"/root/nos-client-new/SmartT-dApp/package.json","includedInParent":true,"mtime":1533711856700},{"name":"/root/nos-client-new/SmartT-dApp/node_modules/node-forge/package.json","includedInParent":true,"mtime":499162500000},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","map":{"mappings":[{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/node-forge/lib/baseN.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}}],"sources":{"../node_modules/node-forge/lib/baseN.js":"/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n"},"lineCount":188}},"hash":"e8b1391b000242f9125f318cc21d26bb","cacheData":{"env":{}}}