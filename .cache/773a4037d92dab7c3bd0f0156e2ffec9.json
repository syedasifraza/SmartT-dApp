{"dependencies":[{"name":"/root/nos-client-new/latest-smartt-code/package.json","includedInParent":true,"mtime":1532424333180},{"name":"/root/nos-client-new/latest-smartt-code/node_modules/ipfs-api/package.json","includedInParent":true,"mtime":499162500000},{"name":"http","loc":{"line":3,"column":28}},{"name":"https","loc":{"line":4,"column":29}}],"generated":{"js":"'use strict';\n\nvar httpRequest = require('http').request;\nvar httpsRequest = require('https').request;\n\nmodule.exports = function (protocol) {\n  if (protocol.indexOf('https') === 0) {\n    return httpsRequest;\n  }\n\n  return httpRequest;\n};","map":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":1,"column":0}},{"generated":{"line":3,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":3,"column":0}},{"name":"httpRequest","generated":{"line":3,"column":4},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":3,"column":6}},{"name":"require","generated":{"line":3,"column":18},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":26},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":3,"column":28}},{"generated":{"line":3,"column":32},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":3,"column":20}},{"name":"request","generated":{"line":3,"column":34},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":3,"column":36}},{"generated":{"line":3,"column":41},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":3,"column":0}},{"generated":{"line":4,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":4,"column":0}},{"name":"httpsRequest","generated":{"line":4,"column":4},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":4,"column":6}},{"name":"require","generated":{"line":4,"column":19},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":4,"column":21}},{"generated":{"line":4,"column":27},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":4,"column":29}},{"generated":{"line":4,"column":34},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":4,"column":21}},{"name":"request","generated":{"line":4,"column":36},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":4,"column":38}},{"generated":{"line":4,"column":43},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":4,"column":0}},{"name":"module","generated":{"line":6,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":0}},{"name":"exports","generated":{"line":6,"column":7},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":7}},{"generated":{"line":6,"column":14},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":0}},{"generated":{"line":6,"column":17},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":17}},{"name":"protocol","generated":{"line":6,"column":27},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":18}},{"generated":{"line":6,"column":35},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":17}},{"generated":{"line":6,"column":37},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":31}},{"generated":{"line":7,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":2}},{"name":"protocol","generated":{"line":7,"column":6},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":6}},{"name":"indexOf","generated":{"line":7,"column":15},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":15}},{"generated":{"line":7,"column":22},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":6}},{"generated":{"line":7,"column":23},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":23}},{"generated":{"line":7,"column":30},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":6}},{"generated":{"line":7,"column":36},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":36}},{"generated":{"line":7,"column":37},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":2}},{"generated":{"line":7,"column":39},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":7,"column":39}},{"generated":{"line":8,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":8,"column":4}},{"name":"httpsRequest","generated":{"line":8,"column":11},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":8,"column":11}},{"generated":{"line":8,"column":23},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":8,"column":4}},{"generated":{"line":9,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":9,"column":3}},{"generated":{"line":11,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":11,"column":2}},{"name":"httpRequest","generated":{"line":11,"column":9},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":11,"column":9}},{"generated":{"line":11,"column":20},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":11,"column":2}},{"generated":{"line":12,"column":0},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":12,"column":1}},{"generated":{"line":12,"column":1},"source":"../node_modules/ipfs-api/src/utils/request.js","original":{"line":6,"column":0}}],"sources":{"../node_modules/ipfs-api/src/utils/request.js":"'use strict'\n\nconst httpRequest = require('http').request\nconst httpsRequest = require('https').request\n\nmodule.exports = (protocol) => {\n  if (protocol.indexOf('https') === 0) {\n    return httpsRequest\n  }\n\n  return httpRequest\n}\n"},"lineCount":null}},"hash":"c82b9655e4e304f5b008c8f8b697fe8b","cacheData":{"env":{}}}