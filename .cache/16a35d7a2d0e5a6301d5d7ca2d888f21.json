{"dependencies":[{"name":"/root/nos-client-new/SmartT-dApp/package.json","includedInParent":true,"mtime":1533711856700},{"name":"/root/nos-client-new/SmartT-dApp/node_modules/multihashes/package.json","includedInParent":true,"mtime":1515066277000},{"name":"bs58","loc":{"line":8,"column":21}},{"name":"./constants","loc":{"line":10,"column":19}},{"name":"varint","loc":{"line":16,"column":23}},{"name":"buffer"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst bs58 = require('bs58')\n\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\nconst varint = require('varint')\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return bs58.encode(hash)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return Buffer.from(bs58.decode(encoded))\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 3) {\n    throw new Error('multihash too short. must be > 3 bytes.')\n  }\n\n  let code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  let len = varint.decode(buf)\n  if (len < 1) {\n    throw new Error(`multihash invalid length: 0x${len.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || !code) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (!cs.names[name]) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (!cs.codes[code] && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n","map":{"mappings":[{"source":"../node_modules/multihashes/src/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/multihashes/src/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}}],"sources":{"../node_modules/multihashes/src/index.js":"/**\n * Multihash implementation in JavaScript.\n *\n * @module multihash\n */\n'use strict'\n\nconst bs58 = require('bs58')\n\nconst cs = require('./constants')\n\nexports.names = cs.names\nexports.codes = cs.codes\nexports.defaultLengths = cs.defaultLengths\n\nconst varint = require('varint')\n\n/**\n * Convert the given multihash to a hex encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toHexString = function toHexString (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return hash.toString('hex')\n}\n\n/**\n * Convert the given hex encoded string to a multihash.\n *\n * @param {string} hash\n * @returns {Buffer}\n */\nexports.fromHexString = function fromHexString (hash) {\n  return Buffer.from(hash, 'hex')\n}\n\n/**\n * Convert the given multihash to a base58 encoded string.\n *\n * @param {Buffer} hash\n * @returns {string}\n */\nexports.toB58String = function toB58String (hash) {\n  if (!Buffer.isBuffer(hash)) {\n    throw new Error('must be passed a buffer')\n  }\n\n  return bs58.encode(hash)\n}\n\n/**\n * Convert the given base58 encoded string to a multihash.\n *\n * @param {string|Buffer} hash\n * @returns {Buffer}\n */\nexports.fromB58String = function fromB58String (hash) {\n  let encoded = hash\n  if (Buffer.isBuffer(hash)) {\n    encoded = hash.toString()\n  }\n\n  return Buffer.from(bs58.decode(encoded))\n}\n\n/**\n * Decode a hash from the given multihash.\n *\n * @param {Buffer} buf\n * @returns {{code: number, name: string, length: number, digest: Buffer}} result\n */\nexports.decode = function decode (buf) {\n  if (!(Buffer.isBuffer(buf))) {\n    throw new Error('multihash must be a Buffer')\n  }\n\n  if (buf.length < 3) {\n    throw new Error('multihash too short. must be > 3 bytes.')\n  }\n\n  let code = varint.decode(buf)\n  if (!exports.isValidCode(code)) {\n    throw new Error(`multihash unknown function code: 0x${code.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  let len = varint.decode(buf)\n  if (len < 1) {\n    throw new Error(`multihash invalid length: 0x${len.toString(16)}`)\n  }\n  buf = buf.slice(varint.decode.bytes)\n\n  if (buf.length !== len) {\n    throw new Error(`multihash length inconsistent: 0x${buf.toString('hex')}`)\n  }\n\n  return {\n    code: code,\n    name: cs.codes[code],\n    length: len,\n    digest: buf\n  }\n}\n\n/**\n *  Encode a hash digest along with the specified function code.\n *\n * > **Note:** the length is derived from the length of the digest itself.\n *\n * @param {Buffer} digest\n * @param {string|number} code\n * @param {number} [length]\n * @returns {Buffer}\n */\nexports.encode = function encode (digest, code, length) {\n  if (!digest || !code) {\n    throw new Error('multihash encode requires at least two args: digest, code')\n  }\n\n  // ensure it's a hashfunction code.\n  const hashfn = exports.coerceCode(code)\n\n  if (!(Buffer.isBuffer(digest))) {\n    throw new Error('digest should be a Buffer')\n  }\n\n  if (length == null) {\n    length = digest.length\n  }\n\n  if (length && digest.length !== length) {\n    throw new Error('digest length should be equal to specified length.')\n  }\n\n  return Buffer.concat([\n    Buffer.from(varint.encode(hashfn)),\n    Buffer.from(varint.encode(length)),\n    digest\n  ])\n}\n\n/**\n * Converts a hash function name into the matching code.\n * If passed a number it will return the number if it's a valid code.\n * @param {string|number} name\n * @returns {number}\n */\nexports.coerceCode = function coerceCode (name) {\n  let code = name\n\n  if (typeof name === 'string') {\n    if (!cs.names[name]) {\n      throw new Error(`Unrecognized hash function named: ${name}`)\n    }\n    code = cs.names[name]\n  }\n\n  if (typeof code !== 'number') {\n    throw new Error(`Hash function code should be a number. Got: ${code}`)\n  }\n\n  if (!cs.codes[code] && !exports.isAppCode(code)) {\n    throw new Error(`Unrecognized function code: ${code}`)\n  }\n\n  return code\n}\n\n/**\n * Checks wether a code is part of the app range\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isAppCode = function appCode (code) {\n  return code > 0 && code < 0x10\n}\n\n/**\n * Checks whether a multihash code is valid.\n *\n * @param {number} code\n * @returns {boolean}\n */\nexports.isValidCode = function validCode (code) {\n  if (exports.isAppCode(code)) {\n    return true\n  }\n\n  if (cs.codes[code]) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Check if the given buffer is a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nfunction validate (multihash) {\n  exports.decode(multihash) // throws if bad.\n}\nexports.validate = validate\n\n/**\n * Returns a prefix from a valid multihash. Throws an error if it is not valid.\n *\n * @param {Buffer} multihash\n * @returns {undefined}\n * @throws {Error}\n */\nexports.prefix = function prefix (multihash) {\n  validate(multihash)\n\n  return multihash.slice(0, 2)\n}\n"},"lineCount":227}},"hash":"a97e25b63e8040d6c7bb86bf2f9c0be8","cacheData":{"env":{}}}